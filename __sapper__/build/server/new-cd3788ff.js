'use strict';

var index = require('./index-7460d1f3.js');
require('./index-4169654c.js');
require('cookie-universal');
require('./index-eb724975.js');
require('./index-c0882747.js');
require('svelte-toast');
var Select = require('./Select-6893572d.js');
var _apiv1 = require('./_apiv1-50cacf4c.js');
require('sha1');

const getCalendarPage = (month, year, dayProps, weekStart = 0) => {
  let date = new Date(year, month, 1);
  date.setDate(date.getDate() - date.getDay() + weekStart);
  let nextMonth = month === 11 ? 0 : month + 1;
  // ensure days starts on Sunday
  // and end on saturday
  let weeks = [];
  while (date.getMonth() !== nextMonth || date.getDay() !== weekStart || weeks.length !== 6) {
    if (date.getDay() === weekStart) weeks.unshift({ days: [], id: `${year}${month}${year}${weeks.length}` });
    const updated = Object.assign({
      partOfMonth: date.getMonth() === month,
      date: new Date(date)
    }, dayProps(date));
    weeks[0].days.push(updated);
    date.setDate(date.getDate() + 1);
  }
  weeks.reverse();
  return { month, year, weeks };
};

const getDayPropsHandler = (start, end, selectableCallback) => {
  let today = new Date();
  today.setHours(0, 0, 0, 0);
  return date => ({
    selectable: date >= start && date <= end
     && (!selectableCallback || selectableCallback(date)),
    isToday: date.getTime() === today.getTime()
  });
};

function getMonths(start, end, selectableCallback = null, weekStart = 0) {
  start.setHours(0, 0, 0, 0);
  end.setHours(0, 0, 0, 0);
  let endDate = new Date(end.getFullYear(), end.getMonth() + 1, 1);
  let months = [];
  let date = new Date(start.getFullYear(), start.getMonth(), 1);
  let dayPropsHandler = getDayPropsHandler(start, end, selectableCallback);
  while (date < endDate) {
    months.push(getCalendarPage(date.getMonth(), date.getFullYear(), dayPropsHandler, weekStart));
    date.setMonth(date.getMonth() + 1);
  }
  return months;
}

const areDatesEquivalent = (a, b) => a.getDate() === b.getDate()
  && a.getMonth() === b.getMonth()
  && a.getFullYear() === b.getFullYear();

/* node_modules\svelte-calendar\src\Components\Week.svelte generated by Svelte v3.16.4 */

const css = {
	code: ".week.svelte-1f2gkwh{padding:0;margin:0;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;flex-flow:row;-webkit-flex-flow:row;justify-content:space-around;-ms-grid-column:1;grid-column:1}.week.svelte-1f2gkwh:nth-child(6n + 1){-ms-grid-row:1;grid-row:1}.week.svelte-1f2gkwh:nth-child(6n + 2){-ms-grid-row:2;grid-row:2}.week.svelte-1f2gkwh:nth-child(6n + 3){-ms-grid-row:3;grid-row:3}.week.svelte-1f2gkwh:nth-child(6n + 4){-ms-grid-row:4;grid-row:4}.week.svelte-1f2gkwh:nth-child(6n + 5){-ms-grid-row:5;grid-row:5}.week.svelte-1f2gkwh:nth-child(6n + 6){-ms-grid-row:6;grid-row:6}.day.svelte-1f2gkwh{margin:2px;color:var(--day-text-color);font-weight:bold;text-align:center;font-size:16px;flex:1 0 auto;height:auto;display:flex;flex-basis:0}.day.outside-month.svelte-1f2gkwh,.day.is-disabled.svelte-1f2gkwh{opacity:0.35}.day.svelte-1f2gkwh:before{content:'';float:left;padding-top:100%}.day--label.svelte-1f2gkwh{color:var(--day-text-color);display:flex;justify-content:center;flex-direction:column;width:100%;position:relative;border:1px solid #fff;border-radius:50%;margin:10%;padding:0;align-items:center;background:var(--day-background-color);cursor:pointer;transition:all 100ms linear;font-weight:normal}.day--label.disabled.svelte-1f2gkwh{cursor:default}@media(min-width: 480px){.day--label.highlighted.svelte-1f2gkwh,.day--label.svelte-1f2gkwh:not(.disabled):hover{background:var(--day-highlighted-background-color);border-color:var(--day-highlighted-background-color);color:var(--day-highlighted-text-color)}}.day--label.shake-date.svelte-1f2gkwh{animation:svelte-1f2gkwh-shake 0.4s 1 linear}.day--label.selected.svelte-1f2gkwh:hover,.day--label.selected.svelte-1f2gkwh,.day--label.svelte-1f2gkwh:active:not(.disabled){background-color:var(--highlight-color);border-color:var(--highlight-color);color:#fff}.day.is-today.svelte-1f2gkwh .day--label.svelte-1f2gkwh,.day.is-today.svelte-1f2gkwh .day--label.svelte-1f2gkwh:hover{opacity:1;background:none;border-color:var(--highlight-color);color:#000}@keyframes svelte-1f2gkwh-shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}100%{transform:translate(0px)}}",
	map: "{\"version\":3,\"file\":\"Week.svelte\",\"sources\":[\"Week.svelte\"],\"sourcesContent\":[\"<script>\\n  import { areDatesEquivalent } from './lib/helpers';\\n  import { fly, fade } from 'svelte/transition';\\n  import { createEventDispatcher } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n\\n  export let days;\\n  export let selected;\\n  export let start;\\n  export let end;\\n  export let highlighted;\\n  export let shouldShakeDate;\\n  export let direction;\\n</script>\\n\\n<div \\n  class=\\\"week\\\" \\n  in:fly={{ x: direction * 50, duration: 180, delay: 90 }}\\n  out:fade={{ duration: 180 }}\\n>\\n  {#each days as day}\\n    <div \\n      class=\\\"day\\\" \\n      class:outside-month={!day.partOfMonth}\\n      class:is-today={day.isToday}\\n      class:is-disabled={!day.selectable}\\n    >\\n      <button \\n        class=\\\"day--label\\\" \\n        class:selected={areDatesEquivalent(day.date, selected)}\\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\\n        class:disabled={!day.selectable}\\n        type=\\\"button\\\"\\n        on:click={() => dispatch('dateSelected', day.date)}\\n      >\\n        {day.date.getDate()}\\n      </button>\\n    </div>\\n  {/each}\\n</div>\\n\\n<style>\\n  .week { \\n    padding: 0;\\n    margin: 0;\\n    display: -webkit-box;\\n    display: -moz-box;\\n    display: -ms-flexbox;\\n    display: -webkit-flex;\\n    display: flex;\\n    flex-flow: row;\\n    -webkit-flex-flow: row;\\n    justify-content: space-around;\\n    -ms-grid-column: 1;\\n    grid-column: 1; \\n  }\\n  .week:nth-child(6n + 1) { \\n    -ms-grid-row: 1; \\n    grid-row: 1; \\n  }\\n  .week:nth-child(6n + 2) { \\n    -ms-grid-row: 2; \\n    grid-row: 2; \\n  }\\n  .week:nth-child(6n + 3) { \\n    -ms-grid-row: 3; \\n    grid-row: 3; \\n  }\\n  .week:nth-child(6n + 4) { \\n    -ms-grid-row: 4; \\n    grid-row: 4; \\n  }\\n  .week:nth-child(6n + 5) { \\n    -ms-grid-row: 5; \\n    grid-row: 5; \\n  }\\n  .week:nth-child(6n + 6) { \\n    -ms-grid-row: 6; \\n    grid-row: 6; \\n  }\\n  .day { \\n    margin: 2px;\\n    color: var(--day-text-color);\\n    font-weight: bold;\\n    text-align: center;\\n    font-size: 16px;\\n    flex: 1 0 auto;\\n    height: auto;\\n    display: flex; \\n    flex-basis: 0;\\n  }\\n  .day.outside-month, \\n  .day.is-disabled { \\n    opacity: 0.35;\\n  }\\n  .day:before { \\n    content: '';\\n    float: left;\\n    padding-top: 100%;\\n  }\\n  .day--label { \\n    color: var(--day-text-color);\\n    display: flex;\\n    justify-content: center;\\n    flex-direction: column;\\n    width: 100%;\\n    position: relative;\\n    border: 1px solid #fff;\\n    border-radius: 50%; \\n    margin: 10%;\\n    padding: 0;\\n    align-items: center;\\n    background: var(--day-background-color);\\n    cursor: pointer;\\n    transition: all 100ms linear;\\n    font-weight: normal;\\n  }\\n  .day--label.disabled { \\n    cursor: default;\\n  }\\n  @media (min-width: 480px) { \\n    .day--label.highlighted,\\n    .day--label:not(.disabled):hover { \\n      background: var(--day-highlighted-background-color);\\n      border-color: var(--day-highlighted-background-color);\\n      color: var(--day-highlighted-text-color);\\n    }\\n  }\\n  .day--label.shake-date { \\n    animation: shake 0.4s 1 linear;\\n  }\\n  .day--label.selected:hover,\\n  .day--label.selected,\\n  .day--label:active:not(.disabled) { \\n    background-color: var(--highlight-color);\\n    border-color: var(--highlight-color);\\n    color: #fff;\\n  }\\n  .day.is-today .day--label, \\n  .day.is-today .day--label:hover { \\n    opacity: 1; \\n    background: none;\\n    border-color: var(--highlight-color);\\n    color: #000;\\n  }\\n\\n  @keyframes shake {\\n    0% { transform: translate(7px); }\\n    20% { transform: translate(-7px); }\\n    40% { transform: translate(3px); }\\n    60% { transform: translate(-3px); }\\n    80% { transform: translate(1px); }\\n    100% { transform: translate(0px); }\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AA4CE,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,QAAQ,CACjB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CACd,iBAAiB,CAAE,GAAG,CACtB,eAAe,CAAE,YAAY,CAC7B,eAAe,CAAE,CAAC,CAClB,WAAW,CAAE,CAAC,AAChB,CAAC,AACD,oBAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,oBAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,oBAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,oBAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,oBAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,oBAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,gBAAgB,CAAC,CAC5B,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,CAAC,AACf,CAAC,AACD,IAAI,6BAAc,CAClB,IAAI,YAAY,eAAC,CAAC,AAChB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,mBAAI,OAAO,AAAC,CAAC,AACX,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,gBAAgB,CAAC,CAC5B,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,IAAI,sBAAsB,CAAC,CACvC,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAC5B,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,WAAW,SAAS,eAAC,CAAC,AACpB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,WAAW,2BAAY,CACvB,MAAM,oBAAK,KAAK,SAAS,CAAC,MAAM,AAAC,CAAC,AAChC,UAAU,CAAE,IAAI,qBAAqB,aAAa,CAAC,CACnD,YAAY,CAAE,IAAI,iCAAiC,CAAC,CAAC,CACrD,KAAK,CAAE,IAAI,4BAA4B,CAAC,AAC1C,CAAC,AACH,CAAC,AACD,SAAS,EAAE,WAAW,eAAC,CAAC,AACtB,SAAS,CAAE,oBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,AAChC,CAAC,AACD,WAAW,wBAAS,MAAM,CAC1B,WAAW,wBAAS,CACpB,0BAAW,OAAO,KAAK,SAAS,CAAC,AAAC,CAAC,AACjC,gBAAgB,CAAE,IAAI,iBAAiB,CAAC,CACxC,YAAY,CAAE,IAAI,iBAAiB,CAAC,CACpC,KAAK,CAAE,IAAI,AACb,CAAC,AACD,IAAI,wBAAS,CAAC,0BAAW,CACzB,IAAI,wBAAS,CAAC,0BAAW,MAAM,AAAC,CAAC,AAC/B,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,IAAI,iBAAiB,CAAC,CACpC,KAAK,CAAE,IAAI,AACb,CAAC,AAED,WAAW,oBAAM,CAAC,AAChB,EAAE,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AACjC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,IAAI,CAAC,AAAE,CAAC,AACnC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AAClC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,IAAI,CAAC,AAAE,CAAC,AACnC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AAClC,IAAI,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AACrC,CAAC\"}"
};

const Week = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	const dispatch = index.createEventDispatcher();
	let { days } = $$props;
	let { selected } = $$props;
	let { start } = $$props;
	let { end } = $$props;
	let { highlighted } = $$props;
	let { shouldShakeDate } = $$props;
	let { direction } = $$props;
	if ($$props.days === void 0 && $$bindings.days && days !== void 0) $$bindings.days(days);
	if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0) $$bindings.selected(selected);
	if ($$props.start === void 0 && $$bindings.start && start !== void 0) $$bindings.start(start);
	if ($$props.end === void 0 && $$bindings.end && end !== void 0) $$bindings.end(end);
	if ($$props.highlighted === void 0 && $$bindings.highlighted && highlighted !== void 0) $$bindings.highlighted(highlighted);
	if ($$props.shouldShakeDate === void 0 && $$bindings.shouldShakeDate && shouldShakeDate !== void 0) $$bindings.shouldShakeDate(shouldShakeDate);
	if ($$props.direction === void 0 && $$bindings.direction && direction !== void 0) $$bindings.direction(direction);
	$$result.css.add(css);

	return `<div class="${"week svelte-1f2gkwh"}">
  ${index.each(days, day => `<div class="${[
		"day svelte-1f2gkwh",
		(!day.partOfMonth ? "outside-month" : "") + " " + (day.isToday ? "is-today" : "") + " " + (!day.selectable ? "is-disabled" : "")
	].join(" ").trim()}">
      <button class="${[
		"day--label svelte-1f2gkwh",
		(areDatesEquivalent(day.date, selected) ? "selected" : "") + " " + (areDatesEquivalent(day.date, highlighted)
		? "highlighted"
		: "") + " " + (shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)
		? "shake-date"
		: "") + " " + (!day.selectable ? "disabled" : "")
	].join(" ").trim()}" type="${"button"}">
        ${index.escape(day.date.getDate())}
      </button>
    </div>`)}
</div>`;
});

/* node_modules\svelte-calendar\src\Components\Month.svelte generated by Svelte v3.16.4 */

const css$1 = {
	code: ".month-container.svelte-ny3kda{width:100%;display:-ms-grid;display:grid;-ms-grid-columns:1fr;-ms-grid-rows:1fr}",
	map: "{\"version\":3,\"file\":\"Month.svelte\",\"sources\":[\"Month.svelte\"],\"sourcesContent\":[\"<script>\\n  import Week from './Week.svelte';\\n\\n  export let id;\\n  export let visibleMonth;\\n  export let selected;\\n  export let start;\\n  export let end;\\n  export let highlighted;\\n  export let shouldShakeDate;\\n\\n  let lastId = id;\\n  let direction;\\n\\n  $: {\\n    direction = lastId < id ? 1 : -1;\\n    lastId = id;\\n  }\\n</script>\\n\\n<div class=\\\"month-container\\\">\\n  {#each visibleMonth.weeks as week (week.id) }\\n    <Week \\n      days={week.days} \\n      {selected} \\n      {start} \\n      {end} \\n      {highlighted} \\n      {shouldShakeDate} \\n      {direction}\\n      on:dateSelected \\n    />\\n  {/each}\\n</div>\\n\\n<style>\\n  .month-container { \\n    width: 100%;\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: 1fr;\\n    -ms-grid-rows: 1fr;\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AAoCE,gBAAgB,cAAC,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,QAAQ,CACjB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,GAAG,CACrB,aAAa,CAAE,GAAG,AACpB,CAAC\"}"
};

const Month = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { id } = $$props;
	let { visibleMonth } = $$props;
	let { selected } = $$props;
	let { start } = $$props;
	let { end } = $$props;
	let { highlighted } = $$props;
	let { shouldShakeDate } = $$props;
	let lastId = id;
	let direction;
	if ($$props.id === void 0 && $$bindings.id && id !== void 0) $$bindings.id(id);
	if ($$props.visibleMonth === void 0 && $$bindings.visibleMonth && visibleMonth !== void 0) $$bindings.visibleMonth(visibleMonth);
	if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0) $$bindings.selected(selected);
	if ($$props.start === void 0 && $$bindings.start && start !== void 0) $$bindings.start(start);
	if ($$props.end === void 0 && $$bindings.end && end !== void 0) $$bindings.end(end);
	if ($$props.highlighted === void 0 && $$bindings.highlighted && highlighted !== void 0) $$bindings.highlighted(highlighted);
	if ($$props.shouldShakeDate === void 0 && $$bindings.shouldShakeDate && shouldShakeDate !== void 0) $$bindings.shouldShakeDate(shouldShakeDate);
	$$result.css.add(css$1);

	 {
		{
			direction = lastId < id ? 1 : -1;
			lastId = id;
		}
	}

	return `<div class="${"month-container svelte-ny3kda"}">
  ${index.each(visibleMonth.weeks, week => `${index.validate_component(Week, "Week").$$render(
		$$result,
		{
			days: week.days,
			selected,
			start,
			end,
			highlighted,
			shouldShakeDate,
			direction
		},
		{},
		{}
	)}`)}
</div>`;
});

/* node_modules\svelte-calendar\src\Components\NavBar.svelte generated by Svelte v3.16.4 */

const css$2 = {
	code: ".heading-section.svelte-1dqf106{font-size:20px;padding:24px 15px;display:flex;justify-content:space-between;color:#3d4548;font-weight:bold}.label.svelte-1dqf106{cursor:pointer}.month-selector.svelte-1dqf106{position:absolute;top:75px;left:0;right:0;bottom:0;background-color:#fff;transition:all 300ms;transform:scale(1.2);opacity:0;visibility:hidden;z-index:1;text-align:center}.month-selector.open.svelte-1dqf106{transform:scale(1);visibility:visible;opacity:1}.month-selector--month.svelte-1dqf106{width:31.333%;margin:.5%;height:23%;display:inline-block;color:#4a4a4a;border:1px solid #efefef;opacity:0.2}.month-selector--month.selectable.svelte-1dqf106{opacity:1}.month-selector--month.selectable.svelte-1dqf106:hover{cursor:pointer;box-shadow:0px 0px 3px rgba(0,0,0,0.15)}.month-selector--month.selected.svelte-1dqf106{background:var(--highlight-color);color:#fff}.month-selector--month.svelte-1dqf106:before{content:' ';display:inline-block;height:100%;vertical-align:middle}.month-selector--month.svelte-1dqf106 span.svelte-1dqf106{vertical-align:middle;display:inline-block}.control.svelte-1dqf106{padding:0 8px;opacity:0.2;transform:translateY(3px)}.control.enabled.svelte-1dqf106{opacity:1;cursor:pointer}.arrow.svelte-1dqf106{display:inline-block;width:18px;height:18px;border-style:solid;border-color:#a9a9a9;border-width:0;border-bottom-width:2px;border-right-width:2px}.arrow.right.svelte-1dqf106{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.arrow.left.svelte-1dqf106{transform:rotate(135deg);-webkit-transform:rotate(135deg)}",
	map: "{\"version\":3,\"file\":\"NavBar.svelte\",\"sources\":[\"NavBar.svelte\"],\"sourcesContent\":[\"<script>\\n  import { createEventDispatcher } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n\\n  export let month;\\n  export let start;\\n  export let end;\\n  export let year;\\n  export let canIncrementMonth;\\n  export let canDecrementMonth;\\n  export let monthsOfYear;\\n\\n  let monthSelectorOpen = false;\\n  let availableMonths;\\n\\n  $: {\\n    let isOnLowerBoundary = start.getFullYear() === year;\\n    let isOnUpperBoundary = end.getFullYear() === year;\\n    availableMonths = monthsOfYear.map((m, i) => {\\n      return Object.assign({}, {\\n        name: m[0],\\n        abbrev: m[1]\\n      }, {\\n        selectable:\\n          (!isOnLowerBoundary && !isOnUpperBoundary)\\n          || (\\n            (!isOnLowerBoundary || i >= start.getMonth())\\n            && (!isOnUpperBoundary || i <= end.getMonth())\\n          )\\n      });\\n    });\\n  }\\n\\n  function toggleMonthSelectorOpen() {\\n    monthSelectorOpen = !monthSelectorOpen;\\n  }\\n\\n  function monthSelected(event, m) {\\n    event.stopPropagation();\\n    dispatch('monthSelected', m);\\n    toggleMonthSelectorOpen();\\n  }\\n</script>\\n\\n<div class=\\\"title\\\">\\n  <div class=\\\"heading-section\\\">\\n    <div class=\\\"control\\\" \\n      class:enabled={canDecrementMonth}\\n      on:click={() => dispatch('incrementMonth', -1)}>\\n      <i class=\\\"arrow left\\\"></i>\\n    </div>\\n    <div class=\\\"label\\\" on:click={toggleMonthSelectorOpen}>\\n      {monthsOfYear[month][0]} {year}\\n    </div> \\n    <div class=\\\"control\\\"\\n      class:enabled={canIncrementMonth}\\n      on:click={() => dispatch('incrementMonth', 1)}>\\n      <i class=\\\"arrow right\\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\\"month-selector\\\" class:open={monthSelectorOpen}>\\n    {#each availableMonths as monthDefinition, index}\\n      <div \\n        class=\\\"month-selector--month\\\" \\n        class:selected={index === month}\\n        class:selectable={monthDefinition.selectable}\\n        on:click={e => monthSelected(e, index)}\\n      >\\n        <span>{monthDefinition.abbrev}</span>\\n      </div>\\n    {/each}\\n  </div>\\n</div>\\n\\n<style>\\n  .heading-section { \\n    font-size: 20px;\\n    padding: 24px 15px;\\n    display: flex;\\n    justify-content: space-between;\\n    color: #3d4548;\\n    font-weight: bold;\\n  }\\n  .label { \\n    cursor: pointer;\\n  }\\n  .month-selector { \\n    position: absolute;\\n    top: 75px; \\n    left: 0; \\n    right: 0; \\n    bottom: 0; \\n    background-color: #fff;\\n    transition: all 300ms; \\n    transform: scale(1.2); \\n    opacity: 0; \\n    visibility: hidden;\\n    z-index: 1;\\n    text-align: center;\\n  }\\n  .month-selector.open { \\n    transform: scale(1); \\n    visibility: visible;\\n    opacity: 1;\\n  }\\n  .month-selector--month { \\n    width: 31.333%; \\n    margin: .5%; \\n    height: 23%;\\n    display: inline-block;\\n    color: #4a4a4a;\\n    border: 1px solid #efefef;\\n    opacity: 0.2;\\n  }\\n  .month-selector--month.selectable { \\n    opacity: 1; \\n  }\\n  .month-selector--month.selectable:hover { \\n    cursor: pointer;\\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\\n  }\\n  .month-selector--month.selected { \\n    background: var(--highlight-color);\\n    color: #fff;\\n  }\\n  .month-selector--month:before { \\n    content: ' ';\\n    display: inline-block;\\n    height: 100%;\\n    vertical-align: middle;\\n  }\\n  .month-selector--month span { \\n    vertical-align: middle; \\n    display: inline-block;\\n  }\\n\\n  .control { \\n    padding: 0 8px;\\n    opacity: 0.2;\\n    transform: translateY(3px);\\n  }\\n\\n  .control.enabled { \\n    opacity: 1; \\n    cursor: pointer;\\n  }\\n\\n  .arrow {\\n    display: inline-block;\\n    width: 18px;\\n    height: 18px;\\n    border-style: solid;\\n    border-color: #a9a9a9;\\n    border-width: 0;\\n    border-bottom-width: 2px;\\n    border-right-width: 2px;\\n  }\\n\\n  .arrow.right {\\n    transform: rotate(-45deg);\\n    -webkit-transform: rotate(-45deg);\\n  }\\n\\n  .arrow.left {\\n    transform: rotate(135deg);\\n    -webkit-transform: rotate(135deg);\\n  }\\n\\n</style>\\n\"],\"names\":[],\"mappings\":\"AA4EE,gBAAgB,eAAC,CAAC,AAChB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,eAAe,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,GAAG,CAAC,KAAK,CACrB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,eAAe,KAAK,eAAC,CAAC,AACpB,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,sBAAsB,eAAC,CAAC,AACtB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,sBAAsB,WAAW,eAAC,CAAC,AACjC,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,sBAAsB,0BAAW,MAAM,AAAC,CAAC,AACvC,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AAC1C,CAAC,AACD,sBAAsB,SAAS,eAAC,CAAC,AAC/B,UAAU,CAAE,IAAI,iBAAiB,CAAC,CAClC,KAAK,CAAE,IAAI,AACb,CAAC,AACD,qCAAsB,OAAO,AAAC,CAAC,AAC7B,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,qCAAsB,CAAC,IAAI,eAAC,CAAC,AAC3B,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,WAAW,GAAG,CAAC,AAC5B,CAAC,AAED,QAAQ,QAAQ,eAAC,CAAC,AAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,CAAC,CACf,mBAAmB,CAAE,GAAG,CACxB,kBAAkB,CAAE,GAAG,AACzB,CAAC,AAED,MAAM,MAAM,eAAC,CAAC,AACZ,SAAS,CAAE,OAAO,MAAM,CAAC,CACzB,iBAAiB,CAAE,OAAO,MAAM,CAAC,AACnC,CAAC,AAED,MAAM,KAAK,eAAC,CAAC,AACX,SAAS,CAAE,OAAO,MAAM,CAAC,CACzB,iBAAiB,CAAE,OAAO,MAAM,CAAC,AACnC,CAAC\"}"
};

const NavBar = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	const dispatch = index.createEventDispatcher();
	let { month } = $$props;
	let { start } = $$props;
	let { end } = $$props;
	let { year } = $$props;
	let { canIncrementMonth } = $$props;
	let { canDecrementMonth } = $$props;
	let { monthsOfYear } = $$props;
	let monthSelectorOpen = false;
	let availableMonths;

	if ($$props.month === void 0 && $$bindings.month && month !== void 0) $$bindings.month(month);
	if ($$props.start === void 0 && $$bindings.start && start !== void 0) $$bindings.start(start);
	if ($$props.end === void 0 && $$bindings.end && end !== void 0) $$bindings.end(end);
	if ($$props.year === void 0 && $$bindings.year && year !== void 0) $$bindings.year(year);
	if ($$props.canIncrementMonth === void 0 && $$bindings.canIncrementMonth && canIncrementMonth !== void 0) $$bindings.canIncrementMonth(canIncrementMonth);
	if ($$props.canDecrementMonth === void 0 && $$bindings.canDecrementMonth && canDecrementMonth !== void 0) $$bindings.canDecrementMonth(canDecrementMonth);
	if ($$props.monthsOfYear === void 0 && $$bindings.monthsOfYear && monthsOfYear !== void 0) $$bindings.monthsOfYear(monthsOfYear);
	$$result.css.add(css$2);

	 {
		{
			let isOnLowerBoundary = start.getFullYear() === year;
			let isOnUpperBoundary = end.getFullYear() === year;

			availableMonths = monthsOfYear.map((m, i) => {
				return Object.assign({}, { name: m[0], abbrev: m[1] }, {
					selectable: !isOnLowerBoundary && !isOnUpperBoundary || (!isOnLowerBoundary || i >= start.getMonth()) && (!isOnUpperBoundary || i <= end.getMonth())
				});
			});
		}
	}

	return `<div class="${"title"}">
  <div class="${"heading-section svelte-1dqf106"}">
    <div class="${["control svelte-1dqf106", canDecrementMonth ? "enabled" : ""].join(" ").trim()}">
      <i class="${"arrow left svelte-1dqf106"}"></i>
    </div>
    <div class="${"label svelte-1dqf106"}">
      ${index.escape(monthsOfYear[month][0])} ${index.escape(year)}
    </div> 
    <div class="${["control svelte-1dqf106", canIncrementMonth ? "enabled" : ""].join(" ").trim()}">
      <i class="${"arrow right svelte-1dqf106"}"></i>
    </div>
  </div>
  <div class="${["month-selector svelte-1dqf106", monthSelectorOpen ? "open" : ""].join(" ").trim()}">
    ${index.each(availableMonths, (monthDefinition, index$1) => `<div class="${[
		"month-selector--month svelte-1dqf106",
		(index$1 === month ? "selected" : "") + " " + (monthDefinition.selectable ? "selectable" : "")
	].join(" ").trim()}">
        <span class="${"svelte-1dqf106"}">${index.escape(monthDefinition.abbrev)}</span>
      </div>`)}
  </div>
</div>`;
});

/* node_modules\svelte-calendar\src\Components\Popover.svelte generated by Svelte v3.16.4 */

const css$3 = {
	code: ".sc-popover.svelte-mc1z8c{position:relative}.contents-wrapper.svelte-mc1z8c{transform:translate(-50%, -50%);position:absolute;top:50%;left:50%;transition:none;z-index:2;display:none}.contents.svelte-mc1z8c{background:#fff;box-shadow:0px 10px 26px rgba(0,0,0,0.4) ;opacity:.8;padding-top:0;display:none;animation:svelte-mc1z8c-grow 200ms forwards cubic-bezier(.92,.09,.18,1.05)}.contents-inner.svelte-mc1z8c{animation:svelte-mc1z8c-fadeIn 400ms forwards}.contents-wrapper.visible.svelte-mc1z8c{display:block}.contents-wrapper.visible.svelte-mc1z8c .contents.svelte-mc1z8c{opacity:1;transform:scale(1);display:block}.contents-wrapper.shrink.svelte-mc1z8c .contents.svelte-mc1z8c{animation:svelte-mc1z8c-shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05)}@keyframes svelte-mc1z8c-grow{0%{transform:scale(.9,.1);opacity:0}30%{opacity:1}100%{transform:scale(1)}}@keyframes svelte-mc1z8c-shrink{0%{transform:scale(1);opacity:1}70%{opacity:1}100%{opacity:0;transform:scale(.9,.1)}}@keyframes svelte-mc1z8c-fadeIn{0%{opacity:0}50%{opacity:0}100%{opacity:1}}",
	map: "{\"version\":3,\"file\":\"Popover.svelte\",\"sources\":[\"Popover.svelte\"],\"sourcesContent\":[\"<script>\\n  import { onMount, createEventDispatcher, tick } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n\\n  let once = (el, evt, cb) => {\\n    function handler() {\\n      cb.apply(this, arguments);\\n      el.removeEventListener(evt, handler);\\n    }\\n    el.addEventListener(evt, handler);\\n  };\\n\\n  let popover;\\n  let w;\\n  let triggerContainer;\\n  let contentsAnimated;\\n  let contentsWrapper;\\n  let translateY = 0;\\n  let translateX = 0;\\n\\n  export let open = false;\\n  export let shrink;\\n  export let trigger;\\n  export const close = () => {\\n    shrink = true;\\n    once(contentsAnimated, 'animationend', () => {\\n      shrink = false;\\n      open = false;\\n      dispatch('closed');\\n    });\\n  };\\n\\n  function checkForFocusLoss(evt) {\\n    if (!open) return;\\n    let el = evt.target;\\n    // eslint-disable-next-line\\n    do {\\n      if (el === popover) return;\\n    } while (el = el.parentNode);\\n    close();\\n  }\\n\\n  onMount(() => {\\n    document.addEventListener('click', checkForFocusLoss);\\n    if (!trigger) return;\\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\\n\\n    // eslint-disable-next-line\\n    return () => {\\n      document.removeEventListener('click', checkForFocusLoss);\\n    };\\n  });\\n\\n  const getDistanceToEdges = async () => {\\n    if (!open) { open = true; }\\n    await tick();\\n    let rect = contentsWrapper.getBoundingClientRect();\\n    return {\\n      top: rect.top + (-1 * translateY),\\n      bottom: window.innerHeight - rect.bottom + translateY,\\n      left: rect.left + (-1 * translateX),\\n      right: document.body.clientWidth - rect.right + translateX\\n    };\\n  };\\n\\n  const getTranslate = async () => {\\n    let dist = await getDistanceToEdges();\\n    let x; let\\n      y;\\n    if (w < 480) {\\n      y = dist.bottom;\\n    } else if (dist.top < 0) {\\n      y = Math.abs(dist.top);\\n    } else if (dist.bottom < 0) {\\n      y = dist.bottom;\\n    } else {\\n      y = 0;\\n    }\\n    if (dist.left < 0) {\\n      x = Math.abs(dist.left);\\n    } else if (dist.right < 0) {\\n      x = dist.right;\\n    } else {\\n      x = 0;\\n    }\\n    return { x, y };\\n  };\\n\\n  const doOpen = async () => {\\n    const { x, y } = await getTranslate();\\n\\n    translateX = x;\\n    translateY = y;\\n    open = true;\\n\\n    dispatch('opened');\\n  };\\n</script>\\n\\n<svelte:window bind:innerWidth={w} />\\n<div class=\\\"sc-popover\\\" bind:this={popover}>\\n  <div class=\\\"trigger\\\" on:click={doOpen} bind:this={triggerContainer}>\\n    <slot name=\\\"trigger\\\">\\n    </slot>\\n  </div>\\n  <div \\n    class=\\\"contents-wrapper\\\" \\n    class:visible={open}\\n    class:shrink={shrink}\\n    style=\\\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\\\" \\n    bind:this={contentsWrapper}>\\n    <div class=\\\"contents\\\" bind:this={contentsAnimated}>\\n      <div class=\\\"contents-inner\\\">\\n        <slot name=\\\"contents\\\"></slot>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<style>\\n  .sc-popover { \\n    position: relative;\\n  }\\n\\n  .contents-wrapper { \\n    transform: translate(-50%, -50%); \\n    position: absolute;\\n    top: 50%; \\n    left: 50%; \\n    transition: none;\\n    z-index: 2;\\n    display: none;\\n  }\\n\\n  .contents { \\n    background: #fff;\\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\\n    opacity: .8; \\n    padding-top: 0;\\n    display: none;\\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\\n  }\\n\\n  .contents-inner { \\n    animation: fadeIn 400ms forwards;\\n  }\\n\\n  .contents-wrapper.visible { \\n    display: block;\\n  }\\n\\n  .contents-wrapper.visible .contents { \\n    opacity: 1; \\n    transform: scale(1);\\n    display: block;\\n  }\\n\\n  .contents-wrapper.shrink .contents { \\n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\\n  }\\n\\n  @keyframes grow { \\n    0% { \\n      transform: scale(.9,.1); \\n      opacity: 0; \\n    }\\n    30% { \\n      opacity: 1; \\n    }\\n    100% { \\n      transform: scale(1);\\n    }\\n  }\\n\\n  @keyframes shrink { \\n    0% { \\n      transform: scale(1); \\n      opacity: 1; \\n    }\\n    70% { \\n      opacity: 1; \\n    }\\n    100% { \\n      opacity: 0; \\n      transform: scale(.9,.1);\\n    }\\n  }\\n\\n  @keyframes fadeIn { \\n    0% { \\n      opacity: 0; \\n    }\\n    50% { \\n      opacity: 0;\\n    }\\n    100% { \\n      opacity: 1; \\n    }\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AAyHE,WAAW,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACjB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,AACf,CAAC,AAED,SAAS,cAAC,CAAC,AACT,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAC1C,OAAO,CAAE,EAAE,CACX,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,kBAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AAC/D,CAAC,AAED,eAAe,cAAC,CAAC,AACf,SAAS,CAAE,oBAAM,CAAC,KAAK,CAAC,QAAQ,AAClC,CAAC,AAED,iBAAiB,QAAQ,cAAC,CAAC,AACzB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,iBAAiB,sBAAQ,CAAC,SAAS,cAAC,CAAC,AACnC,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,iBAAiB,qBAAO,CAAC,SAAS,cAAC,CAAC,AAClC,SAAS,CAAE,oBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AACjE,CAAC,AAED,WAAW,kBAAK,CAAC,AACf,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CACvB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,MAAM,CAAC,CAAC,AACrB,CAAC,AACH,CAAC,AAED,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,MAAM,EAAE,CAAC,EAAE,CAAC,AACzB,CAAC,AACH,CAAC,AAED,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,OAAO,CAAE,CAAC,AACZ,CAAC,AACH,CAAC\"}"
};

const Popover = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	const dispatch = index.createEventDispatcher();

	let once = (el, evt, cb) => {
		function handler() {
			cb.apply(this, arguments);
			el.removeEventListener(evt, handler);
		}

		el.addEventListener(evt, handler);
	};

	let popover;
	let triggerContainer;
	let contentsAnimated;
	let contentsWrapper;
	let translateY = 0;
	let translateX = 0;
	let { open = false } = $$props;
	let { shrink } = $$props;
	let { trigger } = $$props;

	const close = () => {
		shrink = true;

		once(contentsAnimated, "animationend", () => {
			shrink = false;
			open = false;
			dispatch("closed");
		});
	};

	function checkForFocusLoss(evt) {
		if (!open) return;
		let el = evt.target;

		do {
			if (el === popover) return;
		} while (el = el.parentNode);

		close();
	}

	index.onMount(() => {
		document.addEventListener("click", checkForFocusLoss);
		if (!trigger) return;
		triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));

		return () => {
			document.removeEventListener("click", checkForFocusLoss);
		};
	});

	if ($$props.open === void 0 && $$bindings.open && open !== void 0) $$bindings.open(open);
	if ($$props.shrink === void 0 && $$bindings.shrink && shrink !== void 0) $$bindings.shrink(shrink);
	if ($$props.trigger === void 0 && $$bindings.trigger && trigger !== void 0) $$bindings.trigger(trigger);
	if ($$props.close === void 0 && $$bindings.close && close !== void 0) $$bindings.close(close);
	$$result.css.add(css$3);

	return `
<div class="${"sc-popover svelte-mc1z8c"}"${index.add_attribute("this", popover, 1)}>
  <div class="${"trigger"}"${index.add_attribute("this", triggerContainer, 1)}>
    ${$$slots.trigger
	? $$slots.trigger({})
	: `
    `}
  </div>
  <div class="${[
		"contents-wrapper svelte-mc1z8c",
		(open ? "visible" : "") + " " + (shrink ? "shrink" : "")
	].join(" ").trim()}" style="${"transform: translate(-50%,-50%) translate(" + index.escape(translateX) + "px, " + index.escape(translateY) + "px)"}"${index.add_attribute("this", contentsWrapper, 1)}>
    <div class="${"contents svelte-mc1z8c"}"${index.add_attribute("this", contentsAnimated, 1)}>
      <div class="${"contents-inner svelte-mc1z8c"}">
        ${$$slots.contents ? $$slots.contents({}) : ``}
      </div>
    </div>
  </div>
</div>`;
});

/**
 * generic function to inject data into token-laden string
 * @param str {String} Required
 * @param name {String} Required
 * @param value {String|Integer} Required
 * @returns {String}
 *
 * @example
 * injectStringData("The following is a token: #{tokenName}", "tokenName", 123); 
 * @returns {String} "The following is a token: 123"
 *
 */
const injectStringData = (str,name,value) => str
  .replace(new RegExp('#{'+name+'}','g'), value);

/**
 * Generic function to enforce length of string. 
 * 
 * Pass a string or number to this function and specify the desired length.
 * This function will either pad the # with leading 0's (if str.length < length)
 * or remove data from the end (@fromBack==false) or beginning (@fromBack==true)
 * of the string when str.length > length.
 *
 * When length == str.length or typeof length == 'undefined', this function
 * returns the original @str parameter.
 * 
 * @param str {String} Required
 * @param length {Integer} Required
 * @param fromBack {Boolean} Optional
 * @returns {String}
 *
 */
const enforceLength = function(str,length,fromBack) {
  str = str.toString();
  if(typeof length == 'undefined') return str;
  if(str.length == length) return str;
  fromBack = (typeof fromBack == 'undefined') ? false : fromBack;
  if(str.length < length) {
    // pad the beginning of the string w/ enough 0's to reach desired length:
    while(length - str.length > 0) str = '0' + str;
  } else if(str.length > length) {
    if(fromBack) {
      // grab the desired #/chars from end of string: ex: '2015' -> '15'
      str = str.substring(str.length-length);
    } else {
      // grab the desired #/chars from beginning of string: ex: '2015' -> '20'
      str = str.substring(0,length);
    }
  }
  return str;
};

const daysOfWeek = [ 
  [ 'Sunday', 'Sun' ],
  [ 'Monday', 'Mon' ],
  [ 'Tuesday', 'Tue' ],
  [ 'Wednesday', 'Wed' ],
  [ 'Thursday', 'Thu' ],
  [ 'Friday', 'Fri' ],
  [ 'Saturday', 'Sat' ]
];

const monthsOfYear = [ 
  [ 'January', 'Jan' ],
  [ 'February', 'Feb' ],
  [ 'March', 'Mar' ],
  [ 'April', 'Apr' ],
  [ 'May', 'May' ],
  [ 'June', 'Jun' ],
  [ 'July', 'Jul' ],
  [ 'August', 'Aug' ],
  [ 'September', 'Sep' ],
  [ 'October', 'Oct' ],
  [ 'November', 'Nov' ],
  [ 'December', 'Dec' ]
];

let dictionary = { 
  daysOfWeek, 
  monthsOfYear
};

const extendDictionary = (conf) => 
  Object.keys(conf).forEach(key => {
    if(dictionary[key] && dictionary[key].length == conf[key].length) {
      dictionary[key] = conf[key];
    }
  });

var acceptedDateTokens = [
  { 
    // d: day of the month, 2 digits with leading zeros:
    key: 'd', 
    method: function(date) { return enforceLength(date.getDate(), 2); } 
  }, { 
    // D: textual representation of day, 3 letters: Sun thru Sat
    key: 'D', 
    method: function(date) { return dictionary.daysOfWeek[date.getDay()][1]; } 
  }, { 
    // j: day of month without leading 0's
    key: 'j', 
    method: function(date) { return date.getDate(); } 
  }, { 
    // l: full textual representation of day of week: Sunday thru Saturday
    key: 'l', 
    method: function(date) { return dictionary.daysOfWeek[date.getDay()][0]; } 
  }, { 
    // F: full text month: 'January' thru 'December'
    key: 'F', 
    method: function(date) { return dictionary.monthsOfYear[date.getMonth()][0]; } 
  }, { 
    // m: 2 digit numeric month: '01' - '12':
    key: 'm', 
    method: function(date) { return enforceLength(date.getMonth()+1,2); } 
  }, { 
    // M: a short textual representation of the month, 3 letters: 'Jan' - 'Dec'
    key: 'M', 
    method: function(date) { return dictionary.monthsOfYear[date.getMonth()][1]; } 
  }, { 
    // n: numeric represetation of month w/o leading 0's, '1' - '12':
    key: 'n', 
    method: function(date) { return date.getMonth() + 1; } 
  }, { 
    // Y: Full numeric year, 4 digits
    key: 'Y', 
    method: function(date) { return date.getFullYear(); } 
  }, { 
    // y: 2 digit numeric year:
    key: 'y', 
    method: function(date) { return enforceLength(date.getFullYear(),2,true); }
   }
];

var acceptedTimeTokens = [
  { 
    // a: lowercase ante meridiem and post meridiem 'am' or 'pm'
    key: 'a', 
    method: function(date) { return (date.getHours() > 11) ? 'pm' : 'am'; } 
  }, { 
    // A: uppercase ante merdiiem and post meridiem 'AM' or 'PM'
    key: 'A', 
    method: function(date) { return (date.getHours() > 11) ? 'PM' : 'AM'; } 
  }, { 
    // g: 12-hour format of an hour without leading zeros 1-12
    key: 'g', 
    method: function(date) { return date.getHours() % 12 || 12; } 
  }, { 
    // G: 24-hour format of an hour without leading zeros 0-23
    key: 'G', 
    method: function(date) { return date.getHours(); } 
  }, { 
    // h: 12-hour format of an hour with leading zeros 01-12
    key: 'h', 
    method: function(date) { return enforceLength(date.getHours()%12 || 12,2); } 
  }, { 
    // H: 24-hour format of an hour with leading zeros: 00-23
    key: 'H', 
    method: function(date) { return enforceLength(date.getHours(),2); } 
  }, { 
    // i: Minutes with leading zeros 00-59
    key: 'i', 
    method: function(date) { return enforceLength(date.getMinutes(),2); } 
  }, { 
    // s: Seconds with leading zeros 00-59
    key: 's', 
    method: function(date) { return enforceLength(date.getSeconds(),2); }
   }
];

/**
 * Internationalization object for timeUtils.internationalize().
 * @typedef internationalizeObj
 * @property {Array} [daysOfWeek=[ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ]] daysOfWeek Weekday labels as strings, starting with Sunday.
 * @property {Array} [monthsOfYear=[ 'January','February','March','April','May','June','July','August','September','October','November','December' ]] monthsOfYear Month labels as strings, starting with January.
 */

/**
 * This function can be used to support additional languages by passing an object with 
 * `daysOfWeek` and `monthsOfYear` attributes.  Each attribute should be an array of
 * strings (ex: `daysOfWeek: ['monday', 'tuesday', 'wednesday'...]`)
 *
 * @param {internationalizeObj} conf
 */
const internationalize = (conf={}) => { 
  extendDictionary(conf);
};

/**
 * generic formatDate function which accepts dynamic templates
 * @param date {Date} Required
 * @param template {String} Optional
 * @returns {String}
 *
 * @example
 * formatDate(new Date(), '#{M}. #{j}, #{Y}')
 * @returns {Number} Returns a formatted date
 *
 */
const formatDate = (date,template='#{m}/#{d}/#{Y}') => {
  acceptedDateTokens.forEach(token => {
    if(template.indexOf(`#{${token.key}}`) == -1) return; 
    template = injectStringData(template,token.key,token.method(date));
  }); 
  acceptedTimeTokens.forEach(token => {
    if(template.indexOf(`#{${token.key}}`) == -1) return;
    template = injectStringData(template,token.key,token.method(date));
  });
  return template;
};

const keyCodes = {
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  pgup: 33,
  pgdown: 34,
  enter: 13,
  escape: 27,
  tab: 9
};

const keyCodesArray = Object.keys(keyCodes).map(k => keyCodes[k]);

/* node_modules\svelte-calendar\src\Components\Datepicker.svelte generated by Svelte v3.16.4 */

const css$4 = {
	code: ".datepicker.svelte-1lorc63{display:inline-block;margin:0 auto;text-align:center;overflow:visible}.calendar-button.svelte-1lorc63{padding:10px 20px;border:1px solid var(--button-border-color);display:block;text-align:center;width:300px;text-decoration:none;cursor:pointer;background:var(--button-background-color);color:var(--button-text-color);border-radius:7px;box-shadow:0px 0px 3px rgba(0, 0, 0, 0.1)}.svelte-1lorc63,.svelte-1lorc63:before,.svelte-1lorc63:after{box-sizing:inherit}.calendar.svelte-1lorc63{box-sizing:border-box;position:relative;overflow:hidden;user-select:none;width:100vw;padding:10px;padding-top:0}@media(min-width: 480px){.calendar.svelte-1lorc63{height:auto;width:340px;max-width:100%}}.legend.svelte-1lorc63{color:#4a4a4a;padding:10px 0;margin-bottom:5px}.legend.svelte-1lorc63 span.svelte-1lorc63{width:14.285714%;display:inline-block;text-align:center}",
	map: "{\"version\":3,\"file\":\"Datepicker.svelte\",\"sources\":[\"Datepicker.svelte\"],\"sourcesContent\":[\"<script>\\n  import Month from './Month.svelte';\\n  import NavBar from './NavBar.svelte';\\n  import Popover from './Popover.svelte';\\n  import { getMonths, areDatesEquivalent } from './lib/helpers';\\n  import { formatDate, internationalize } from 'timeUtils';\\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\\n  import { onMount, createEventDispatcher } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n  const today = new Date();\\n\\n  let popover;\\n\\n  export let format = '#{m}/#{d}/#{Y}';\\n  export let start = new Date(1987, 9, 29);\\n  export let end = new Date(2020, 9, 29);\\n  export let selected = today;\\n  export let dateChosen = false;\\n  export let trigger = null;\\n  export let selectableCallback = null;\\n  export let weekStart = 0;\\n  export let daysOfWeek = [\\n    ['Sunday', 'Sun'],\\n    ['Monday', 'Mon'],\\n    ['Tuesday', 'Tue'],\\n    ['Wednesday', 'Wed'],\\n    ['Thursday', 'Thu'],\\n    ['Friday', 'Fri'],\\n    ['Saturday', 'Sat']\\n  ];\\n  export let monthsOfYear = [\\n    ['January', 'Jan'],\\n    ['February', 'Feb'],\\n    ['March', 'Mar'],\\n    ['April', 'Apr'],\\n    ['May', 'May'],\\n    ['June', 'Jun'],\\n    ['July', 'Jul'],\\n    ['August', 'Aug'],\\n    ['September', 'Sep'],\\n    ['October', 'Oct'],\\n    ['November', 'Nov'],\\n    ['December', 'Dec']\\n  ];\\n\\n  internationalize({ daysOfWeek, monthsOfYear });\\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\\n    let dow = daysOfWeek.slice();\\n    dow.push(dow.shift());\\n    return dow;\\n  })();\\n\\n  let highlighted = today;\\n  let shouldShakeDate = false;\\n  let shakeHighlightTimeout;\\n  let month = today.getMonth();\\n  let year = today.getFullYear();\\n\\n  let isOpen = false;\\n  let isClosing = false;\\n\\n  today.setHours(0, 0, 0, 0);\\n\\n  function assignmentHandler(formatted) {\\n    if (!trigger) return;\\n    trigger.innerHTML = formatted;\\n  }\\n\\n  $: months = getMonths(start, end, selectableCallback, weekStart);\\n\\n  let monthIndex = 0;\\n  $: {\\n    monthIndex = 0;\\n    for (let i = 0; i < months.length; i += 1) {\\n      if (months[i].month === month && months[i].year === year) {\\n        monthIndex = i;\\n      }\\n    }\\n  }\\n  $: visibleMonth = months[monthIndex];\\n\\n  $: visibleMonthId = year + month / 100;\\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\\n  $: canIncrementMonth = monthIndex < months.length - 1;\\n  $: canDecrementMonth = monthIndex > 0;\\n\\n  export let formattedSelected;\\n  $: {\\n    formattedSelected = typeof format === 'function'\\n      ? format(selected)\\n      : formatDate(selected, format);\\n  }\\n\\n  onMount(() => {\\n    month = selected.getMonth();\\n    year = selected.getFullYear();\\n  });\\n\\n  function changeMonth(selectedMonth) {\\n    month = selectedMonth;\\n  }\\n\\n  function incrementMonth(direction, date) {\\n    if (direction === 1 && !canIncrementMonth) return;\\n    if (direction === -1 && !canDecrementMonth) return;\\n    let current = new Date(year, month, 1);\\n    current.setMonth(current.getMonth() + direction);\\n    month = current.getMonth();\\n    year = current.getFullYear();\\n    highlighted = new Date(year, month, date || 1);\\n  }\\n\\n  function getDefaultHighlighted() {\\n    return new Date(selected);\\n  }\\n\\n  function incrementDayHighlighted(amount) {\\n    highlighted = new Date(highlighted);\\n    highlighted.setDate(highlighted.getDate() + amount);\\n    if (amount > 0 && highlighted > lastVisibleDate) {\\n      return incrementMonth(1, highlighted.getDate());\\n    }\\n    if (amount < 0 && highlighted < firstVisibleDate) {\\n      return incrementMonth(-1, highlighted.getDate());\\n    }\\n    return highlighted;\\n  }\\n\\n  function getDay(m, date) {\\n    for (let i = 0; i < m.weeks.length; i += 1) {\\n      for (let j = 0; j < m.weeks[i].days.length; j += 1) {\\n        if (areDatesEquivalent(m.weeks[i].days[j].date, date)) {\\n          return m.weeks[i].days[j];\\n        }\\n      }\\n    }\\n    return null;\\n  }\\n\\n  function checkIfVisibleDateIsSelectable(date) {\\n    const day = getDay(visibleMonth, date);\\n    if (!day) return false;\\n    return day.selectable;\\n  }\\n\\n  function shakeDate(date) {\\n    clearTimeout(shakeHighlightTimeout);\\n    shouldShakeDate = date;\\n    shakeHighlightTimeout = setTimeout(() => {\\n      shouldShakeDate = false;\\n    }, 700);\\n  }\\n\\n  function assignValueToTrigger(formatted) {\\n    assignmentHandler(formatted);\\n  }\\n\\n  function registerSelection(chosen) {\\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\\n    // eslint-disable-next-line\\n    close();\\n    selected = chosen;\\n    dateChosen = true;\\n    assignValueToTrigger(formattedSelected);\\n    return dispatch('dateSelected', { date: chosen });\\n  }\\n\\n  function handleKeyPress(evt) {\\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\\n    evt.preventDefault();\\n    switch (evt.keyCode) {\\n      case keyCodes.left:\\n        incrementDayHighlighted(-1);\\n        break;\\n      case keyCodes.up:\\n        incrementDayHighlighted(-7);\\n        break;\\n      case keyCodes.right:\\n        incrementDayHighlighted(1);\\n        break;\\n      case keyCodes.down:\\n        incrementDayHighlighted(7);\\n        break;\\n      case keyCodes.pgup:\\n        incrementMonth(-1);\\n        break;\\n      case keyCodes.pgdown:\\n        incrementMonth(1);\\n        break;\\n      case keyCodes.escape:\\n        // eslint-disable-next-line\\n        close();\\n        break;\\n      case keyCodes.enter:\\n        registerSelection(highlighted);\\n        break;\\n      default:\\n        break;\\n    }\\n  }\\n\\n  function registerClose() {\\n    document.removeEventListener('keydown', handleKeyPress);\\n    dispatch('close');\\n  }\\n\\n  function close() {\\n    popover.close();\\n    registerClose();\\n  }\\n\\n  function registerOpen() {\\n    highlighted = getDefaultHighlighted();\\n    month = selected.getMonth();\\n    year = selected.getFullYear();\\n    document.addEventListener('keydown', handleKeyPress);\\n    dispatch('open');\\n  }\\n\\n  // theming variables:\\n  export let buttonBackgroundColor = '#fff';\\n  export let buttonBorderColor = '#eee';\\n  export let buttonTextColor = '#333';\\n  export let highlightColor = '#f7901e';\\n  export let dayBackgroundColor = 'none';\\n  export let dayTextColor = '#4a4a4a';\\n  export let dayHighlightedBackgroundColor = '#efefef';\\n  export let dayHighlightedTextColor = '#4a4a4a';\\n</script>\\n\\n<div \\n  class=\\\"datepicker\\\" \\n  class:open=\\\"{isOpen}\\\" \\n  class:closing=\\\"{isClosing}\\\"\\n  style='\\n    --button-background-color: {buttonBackgroundColor};\\n    --button-border-color: {buttonBorderColor};\\n    --button-text-color: {buttonTextColor};\\n    --highlight-color: {highlightColor};\\n    --day-background-color: {dayBackgroundColor};\\n    --day-text-color: {dayTextColor};\\n    --day-highlighted-background-color: {dayHighlightedBackgroundColor};\\n    --day-highlighted-text-color: {dayHighlightedTextColor};\\n  '\\n>\\n  <Popover\\n    bind:this=\\\"{popover}\\\"\\n    bind:open=\\\"{isOpen}\\\"\\n    bind:shrink=\\\"{isClosing}\\\"\\n    {trigger}\\n    on:opened=\\\"{registerOpen}\\\"\\n    on:closed=\\\"{registerClose}\\\"\\n  >\\n    <div slot=\\\"trigger\\\">\\n      <slot>\\n        {#if !trigger}\\n        <button class=\\\"calendar-button\\\" type=\\\"button\\\">\\n          {formattedSelected}\\n        </button>\\n        {/if}\\n      </slot>\\n    </div>\\n    <div slot=\\\"contents\\\">\\n      <div class=\\\"calendar\\\">\\n        <NavBar \\n          {month}\\n          {year}\\n          {start}\\n          {end}\\n          {canIncrementMonth}\\n          {canDecrementMonth}\\n          {monthsOfYear}\\n          on:monthSelected={e => changeMonth(e.detail)}\\n          on:incrementMonth={e => incrementMonth(e.detail)} \\n        />\\n        <div class=\\\"legend\\\">\\n          {#each sortedDaysOfWeek as day}\\n          <span>{day[1]}</span>\\n          {/each}\\n        </div>\\n        <Month {visibleMonth} {selected} {highlighted} {shouldShakeDate} {start}\\n        {end} id={visibleMonthId} on:dateSelected={e => registerSelection(e.detail)} />\\n      </div>\\n    </div>\\n  </Popover>\\n</div>\\n\\n<style>\\n  .datepicker {\\n    display: inline-block;\\n    margin: 0 auto;\\n    text-align: center;\\n    overflow: visible;\\n  }\\n\\n  .calendar-button {\\n    padding: 10px 20px;\\n    border: 1px solid var(--button-border-color);\\n    display: block;\\n    text-align: center;\\n    width: 300px;\\n    text-decoration: none;\\n    cursor: pointer;\\n    background: var(--button-background-color);\\n    color: var(--button-text-color);\\n    border-radius: 7px;\\n    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  *,\\n  *:before,\\n  *:after {\\n    box-sizing: inherit;\\n  }\\n\\n  .calendar {\\n    box-sizing: border-box;\\n    position: relative;\\n    overflow: hidden;\\n    user-select: none;\\n    width: 100vw;\\n    padding: 10px;\\n    padding-top: 0;\\n  }\\n\\n  @media (min-width: 480px) {\\n    .calendar {\\n      height: auto;\\n      width: 340px;\\n      max-width: 100%;\\n    }\\n  }\\n\\n  .legend {\\n    color: #4a4a4a;\\n    padding: 10px 0;\\n    margin-bottom: 5px;\\n  }\\n\\n  .legend span {\\n    width: 14.285714%;\\n    display: inline-block;\\n    text-align: center;\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AAkSE,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,MAAM,CAClB,QAAQ,CAAE,OAAO,AACnB,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,qBAAqB,CAAC,CAC5C,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,KAAK,CACZ,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,IAAI,yBAAyB,CAAC,CAC1C,KAAK,CAAE,IAAI,mBAAmB,CAAC,CAC/B,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC,AAED,eAAC,CACD,eAAC,OAAO,CACR,eAAC,MAAM,AAAC,CAAC,AACP,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,UAAU,CAAE,UAAU,CACtB,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC,AAED,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,sBAAO,CAAC,IAAI,eAAC,CAAC,AACZ,KAAK,CAAE,UAAU,CACjB,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,MAAM,AACpB,CAAC\"}"
};

const Datepicker = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	const dispatch = index.createEventDispatcher();
	const today = new Date();
	let popover;
	let { format = "#{m}/#{d}/#{Y}" } = $$props;
	let { start = new Date(1987, 9, 29) } = $$props;
	let { end = new Date(2020, 9, 29) } = $$props;
	let { selected = today } = $$props;
	let { dateChosen = false } = $$props;
	let { trigger = null } = $$props;
	let { selectableCallback = null } = $$props;
	let { weekStart = 0 } = $$props;

	let { daysOfWeek = [
		["Sunday", "Sun"],
		["Monday", "Mon"],
		["Tuesday", "Tue"],
		["Wednesday", "Wed"],
		["Thursday", "Thu"],
		["Friday", "Fri"],
		["Saturday", "Sat"]
	] } = $$props;

	let { monthsOfYear = [
		["January", "Jan"],
		["February", "Feb"],
		["March", "Mar"],
		["April", "Apr"],
		["May", "May"],
		["June", "Jun"],
		["July", "Jul"],
		["August", "Aug"],
		["September", "Sep"],
		["October", "Oct"],
		["November", "Nov"],
		["December", "Dec"]
	] } = $$props;

	internationalize({ daysOfWeek, monthsOfYear });

	let sortedDaysOfWeek = weekStart === 0
	? daysOfWeek
	: (() => {
			let dow = daysOfWeek.slice();
			dow.push(dow.shift());
			return dow;
		})();

	let highlighted = today;
	let shouldShakeDate = false;
	let month = today.getMonth();
	let year = today.getFullYear();
	let isOpen = false;
	let isClosing = false;
	today.setHours(0, 0, 0, 0);

	let monthIndex = 0;
	let { formattedSelected } = $$props;

	index.onMount(() => {
		month = selected.getMonth();
		year = selected.getFullYear();
	});

	let { buttonBackgroundColor = "#fff" } = $$props;
	let { buttonBorderColor = "#eee" } = $$props;
	let { buttonTextColor = "#333" } = $$props;
	let { highlightColor = "#f7901e" } = $$props;
	let { dayBackgroundColor = "none" } = $$props;
	let { dayTextColor = "#4a4a4a" } = $$props;
	let { dayHighlightedBackgroundColor = "#efefef" } = $$props;
	let { dayHighlightedTextColor = "#4a4a4a" } = $$props;
	if ($$props.format === void 0 && $$bindings.format && format !== void 0) $$bindings.format(format);
	if ($$props.start === void 0 && $$bindings.start && start !== void 0) $$bindings.start(start);
	if ($$props.end === void 0 && $$bindings.end && end !== void 0) $$bindings.end(end);
	if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0) $$bindings.selected(selected);
	if ($$props.dateChosen === void 0 && $$bindings.dateChosen && dateChosen !== void 0) $$bindings.dateChosen(dateChosen);
	if ($$props.trigger === void 0 && $$bindings.trigger && trigger !== void 0) $$bindings.trigger(trigger);
	if ($$props.selectableCallback === void 0 && $$bindings.selectableCallback && selectableCallback !== void 0) $$bindings.selectableCallback(selectableCallback);
	if ($$props.weekStart === void 0 && $$bindings.weekStart && weekStart !== void 0) $$bindings.weekStart(weekStart);
	if ($$props.daysOfWeek === void 0 && $$bindings.daysOfWeek && daysOfWeek !== void 0) $$bindings.daysOfWeek(daysOfWeek);
	if ($$props.monthsOfYear === void 0 && $$bindings.monthsOfYear && monthsOfYear !== void 0) $$bindings.monthsOfYear(monthsOfYear);
	if ($$props.formattedSelected === void 0 && $$bindings.formattedSelected && formattedSelected !== void 0) $$bindings.formattedSelected(formattedSelected);
	if ($$props.buttonBackgroundColor === void 0 && $$bindings.buttonBackgroundColor && buttonBackgroundColor !== void 0) $$bindings.buttonBackgroundColor(buttonBackgroundColor);
	if ($$props.buttonBorderColor === void 0 && $$bindings.buttonBorderColor && buttonBorderColor !== void 0) $$bindings.buttonBorderColor(buttonBorderColor);
	if ($$props.buttonTextColor === void 0 && $$bindings.buttonTextColor && buttonTextColor !== void 0) $$bindings.buttonTextColor(buttonTextColor);
	if ($$props.highlightColor === void 0 && $$bindings.highlightColor && highlightColor !== void 0) $$bindings.highlightColor(highlightColor);
	if ($$props.dayBackgroundColor === void 0 && $$bindings.dayBackgroundColor && dayBackgroundColor !== void 0) $$bindings.dayBackgroundColor(dayBackgroundColor);
	if ($$props.dayTextColor === void 0 && $$bindings.dayTextColor && dayTextColor !== void 0) $$bindings.dayTextColor(dayTextColor);
	if ($$props.dayHighlightedBackgroundColor === void 0 && $$bindings.dayHighlightedBackgroundColor && dayHighlightedBackgroundColor !== void 0) $$bindings.dayHighlightedBackgroundColor(dayHighlightedBackgroundColor);
	if ($$props.dayHighlightedTextColor === void 0 && $$bindings.dayHighlightedTextColor && dayHighlightedTextColor !== void 0) $$bindings.dayHighlightedTextColor(dayHighlightedTextColor);
	$$result.css.add(css$4);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		let months = getMonths(start, end, selectableCallback, weekStart);

		 {
			{
				monthIndex = 0;

				for (let i = 0; i < months.length; i += 1) {
					if (months[i].month === month && months[i].year === year) {
						monthIndex = i;
					}
				}
			}
		}

		let visibleMonth = months[monthIndex];
		let visibleMonthId = year + month / 100;
		let lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;
		let firstVisibleDate = visibleMonth.weeks[0].days[0].date;
		let canIncrementMonth = monthIndex < months.length - 1;
		let canDecrementMonth = monthIndex > 0;

		 {
			{
				formattedSelected = typeof format === "function"
				? format(selected)
				: formatDate(selected, format);
			}
		}

		$$rendered = `<div class="${[
			"datepicker svelte-1lorc63",
			(isOpen ? "open" : "") + " " + (isClosing ? "closing" : "")
		].join(" ").trim()}" style="${"\n    --button-background-color: " + index.escape(buttonBackgroundColor) + ";\n    --button-border-color: " + index.escape(buttonBorderColor) + ";\n    --button-text-color: " + index.escape(buttonTextColor) + ";\n    --highlight-color: " + index.escape(highlightColor) + ";\n    --day-background-color: " + index.escape(dayBackgroundColor) + ";\n    --day-text-color: " + index.escape(dayTextColor) + ";\n    --day-highlighted-background-color: " + index.escape(dayHighlightedBackgroundColor) + ";\n    --day-highlighted-text-color: " + index.escape(dayHighlightedTextColor) + ";\n  "}">
  ${index.validate_component(Popover, "Popover").$$render(
			$$result,
			{
				trigger,
				this: popover,
				open: isOpen,
				shrink: isClosing
			},
			{
				this: $$value => {
					popover = $$value;
					$$settled = false;
				},
				open: $$value => {
					isOpen = $$value;
					$$settled = false;
				},
				shrink: $$value => {
					isClosing = $$value;
					$$settled = false;
				}
			},
			{
				trigger: () => `<div slot="${"trigger"}" class="${"svelte-1lorc63"}">
      ${$$slots.default
				? $$slots.default({})
				: `
        ${!trigger
					? `<button class="${"calendar-button svelte-1lorc63"}" type="${"button"}">
          ${index.escape(formattedSelected)}
        </button>`
					: ``}
      `}
    </div>`,
				contents: () => `<div slot="${"contents"}" class="${"svelte-1lorc63"}">
      <div class="${"calendar svelte-1lorc63"}">
        ${index.validate_component(NavBar, "NavBar").$$render(
					$$result,
					{
						month,
						year,
						start,
						end,
						canIncrementMonth,
						canDecrementMonth,
						monthsOfYear
					},
					{},
					{}
				)}
        <div class="${"legend svelte-1lorc63"}">
          ${index.each(sortedDaysOfWeek, day => `<span class="${"svelte-1lorc63"}">${index.escape(day[1])}</span>`)}
        </div>
        ${index.validate_component(Month, "Month").$$render(
					$$result,
					{
						visibleMonth,
						selected,
						highlighted,
						shouldShakeDate,
						start,
						end,
						id: visibleMonthId
					},
					{},
					{}
				)}
      </div>
    </div>`,
				default: () => `
    
    
  `
			}
		)}
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* src\routes\opportunities\new.svelte generated by Svelte v3.16.4 */

const css$5 = {
	code: ".loader_2.svelte-tymta4:after{width:66.66% !important}.loader_3.svelte-tymta4:after{width:100% !important}.back-btn.svelte-tymta4{border-color:#DB9A02 !important;color:#DB9A02 !important;background-color:#fff0cb !important}.txt-ph.svelte-tymta4{color:#32313c}.txt-green.svelte-tymta4{color:green !important;font-weight:800}.nav-items li.svelte-tymta4 a.svelte-tymta4{color:#fff;font-size:15px;padding:10px 5px;margin-top:30px;font-family:\"Open Sans\", sans-serif;text-transform:capitalize;line-height:15px;position:relative;z-index:1}",
	map: "{\"version\":3,\"file\":\"new.svelte\",\"sources\":[\"new.svelte\"],\"sourcesContent\":[\"<svelte:head>\\r\\n      <!-- Required meta tags -->\\r\\n      <meta charset=\\\"utf-8\\\">\\r\\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\r\\n      <title>AMPZ - Discover A World Of Opportunities</title>\\r\\n      <link rel=\\\"icon\\\" href=\\\"img/favicon.png\\\">\\r\\n      <!-- Bootstrap CSS -->\\r\\n      <link rel=\\\"stylesheet\\\" href=\\\"ampz/css/bootstrap.min.css\\\">\\r\\n      <link rel=\\\"stylesheet\\\" href=\\\"ampz/css/owl.carousel.min.css\\\">\\r\\n      <!-- style CSS -->\\r\\n      <link rel=\\\"stylesheet\\\" href=\\\"ampz/css/style.css\\\">\\r\\n      <script src=\\\"https://code.jquery.com/jquery-3.2.1.slim.min.js\\\" integrity=\\\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n      <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\\\" integrity=\\\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n      <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\\\" integrity=\\\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n          \\r\\n</svelte:head>\\r\\n<script>\\r\\n\\r\\n    import Datepicker from 'svelte-calendar';\\r\\n    import { fade } from 'svelte/transition';\\r\\n    import Toast from 'svelte-toast'\\r\\n\\timport Select from 'svelte-select';\\r\\n    import { get, post } from \\\"../../lib/_apiv1\\\";\\r\\n    import { onMount, afterUpdate } from \\\"svelte\\\";\\r\\n    import sha1 from 'sha1';\\r\\n\\r\\n    let cloudinary = {}\\r\\n    cloudinary.cloudName = \\\"powell-and-moss-traders\\\";\\r\\n    cloudinary.api_key = \\\"281493236699572\\\";\\r\\n    cloudinary.api_secret = \\\"68T8akHD3X54Zw6rdbC3WE5UAMA\\\";\\r\\n    cloudinary.upload_preset = \\\"ampz_stable_resize\\\"\\r\\n\\r\\n\\r\\n    let inProgress;\\r\\n    let cloudinaryImgURL;\\r\\n    let error = {\\r\\n        selectedDeadlineDate:  {\\r\\n            message: 'Enter the deadline date'\\r\\n        },\\r\\n        dDayDate :  {\\r\\n            message: 'Enter the programme date'\\r\\n        },\\r\\n        description:  {\\r\\n            message: 'Enter the description'\\r\\n        },\\r\\n        title:  {\\r\\n            message: 'Enter the title'\\r\\n        },\\r\\n        location:  {\\r\\n            message: 'Enter the location'\\r\\n        },\\r\\n        venue_address: {\\r\\n            message: 'Enter the venue address'\\r\\n         },\\r\\n        selected_opportunity_type: {\\r\\n             message: 'Select an opportunity type'\\r\\n        },\\r\\n        price: {\\r\\n              message: 'Enter the price'\\r\\n        },\\r\\n        age: {\\r\\n              message: 'Enter the age requirement'\\r\\n        },\\r\\n        application_link: {\\r\\n              message: 'Enter your application link'\\r\\n        },\\r\\n        selected_sport_type: {\\r\\n            message: 'Enter your sports interest'\\r\\n        },\\r\\n        selected_profile_type:{\\r\\n            message: 'Select the profile type'\\r\\n        },\\r\\n        registered_name_of_organiser: {\\r\\n                message: 'Enter name of the organiser'\\r\\n        },\\r\\n        registration_type_and_number: {\\r\\n            message: 'Enter the registration number'\\r\\n        },\\r\\n        contact_email: {\\r\\n            message: 'Enter your contact email'\\r\\n        },\\r\\n        phone_number: {\\r\\n            message: 'Enter your phone Number'\\r\\n        },\\r\\n        message : '',\\r\\n        Filesrc: {\\r\\n            message : \\\"Upload an image\\\",\\r\\n            img_too_big_message :  \\\"Image too big (max 3000kb)\\\"\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    let opportunities;\\r\\n    let sports;\\r\\n    let nigerianStates;\\r\\n    let form_a = {\\r\\n        selectedDeadlineDate: '',\\r\\n        dDayDate: '',\\r\\n        description: '',\\r\\n        title: '',\\r\\n        location: null,\\r\\n        venue_address: '',\\r\\n        Filesrc: ''\\r\\n    }\\r\\n\\r\\n    let form_b = {\\r\\n        selected_opportunity_type: null,\\r\\n        selected_sport_type: null,\\r\\n        price: '',\\r\\n        age: '',\\r\\n        application_link: '',\\r\\n    }\\r\\n\\r\\n    let form_c = {\\r\\n        selected_profile_type: null,\\r\\n        registered_name_of_organiser: '',\\r\\n        registration_type_and_number: '',\\r\\n        contact_email: '',\\r\\n        phone_number: ''\\r\\n    }\\r\\n    /*Page Data */\\r\\n\\tconst profiles = [\\r\\n        {value: '5b6712255078132ea9f49b84', label: 'Scout/Agent'},\\r\\n        {value: '5b67121b5078132ea9f49b83', label: 'Coach/Academy '}\\r\\n    ];\\r\\n\\r\\n    let stage = 1;\\r\\n    let loader_progress = \\\"33.333%\\\"\\r\\n\\r\\n    let deadlineDateChosen = false;\\r\\n    let dDayDateChosen = false;\\r\\n    let opp_deadline_err = '';\\r\\n    $: deadlineInputText = deadlineDateChosen ? form_a.selectedDeadlineDate : '';\\r\\n    $: dDayInputText = dDayDateChosen ? form_a.dDayDate : ''; \\r\\n    \\r\\n    let today =  new Date();\\r\\n    let start =  new Date();\\r\\n    \\r\\n    let tomorrow;\\r\\n\\t$: {\\r\\n\\t  const date = new Date(today);\\r\\n\\t  date.setDate(date.getDate() + 1);\\r\\n\\t  tomorrow = date;\\r\\n\\t}\\r\\n\\tlet in100Days;\\r\\n\\t$: {\\r\\n\\t  const date = new Date(start);\\r\\n\\t  date.setDate(date.getDate() + 100);\\r\\n\\t  in100Days = date;\\r\\n    }\\r\\n\\r\\n\\tonMount(async () => {\\r\\n\\t\\tinProgress = true;\\r\\n        const OppTypeRes =  await get(\\\"opportunityType\\\", null, null)\\r\\n        const SportsRes =  await post(\\\"defaultskills\\\", null, null)\\r\\n        const NigerianStatesRes =  await get(\\\"utils/nigerian_states\\\", null, null)\\r\\n        \\r\\n\\t\\tif (OppTypeRes.opportunityTypes) {\\r\\n            opportunities = OppTypeRes.opportunityTypes;\\r\\n            opportunities.map((opportunitiesObj) => {opportunitiesObj.label = opportunitiesObj.name})\\r\\n            // opportunities.push({value: '', label: 'Opportunity Type'})\\r\\n        }\\r\\n        if(SportsRes) {\\r\\n            sports = SportsRes;\\r\\n            sports.map((sportsObj) => {sportsObj.label = sportsObj.name})\\r\\n            // sports.push({value: '', label: 'Sports Type'})\\r\\n        }\\r\\n\\r\\n        if(NigerianStatesRes) {\\r\\n            nigerianStates = NigerianStatesRes\\r\\n        }\\r\\n        inProgress = false;\\r\\n    })\\r\\n    \\r\\n    afterUpdate(() => {\\r\\n        scrollToTopPage()\\r\\n    });\\r\\n\\r\\n\\r\\n    function checkDate (deadlineDate, dDayDate)  {\\r\\n        var deadlineDate = new Date(deadlineDate)\\r\\n        var dDayDate = new Date(dDayDate)\\r\\n\\r\\n        var deadlineDate_ms = deadlineDate.getTime();\\r\\n        var dDayDate_ms = dDayDate.getTime();\\r\\n\\r\\n        if( deadlineDate_ms >= dDayDate_ms) {\\r\\n         return false;\\r\\n        }else {\\r\\n             return true;\\r\\n        }\\r\\n     }\\r\\n    $: {\\r\\n        loader_progress = stage == 1 ? '' : stage == 2 ? 'loader_2' : stage == 3 ? 'loader_3': null;\\r\\n    }\\r\\n\\r\\n    function scrollToTopPage(){\\r\\n      if(error.message) {\\r\\n          window.scrollTo({ top: 0, behavior: 'smooth' })\\r\\n              setTimeout(function() {\\r\\n                 error.message = '';\\r\\n              }, 1500);\\r\\n          };\\r\\n    }\\r\\n\\r\\n   function handleContinue() {\\r\\n        error.message = ''\\r\\n        let errorState;\\r\\n        if(stage === 1 ){\\r\\n            for(var key in form_a) {\\r\\n                if(form_a[key] === \\\"\\\" ||form_a[key] == null) { \\r\\n                    error.message = error[key].message \\r\\n                    errorState = true;\\r\\n                    // scrollToTopPage()\\r\\n                 }\\r\\n            }\\r\\n        }\\r\\n        \\r\\n     if(stage === 2){\\r\\n           for(var key in form_b) {\\r\\n                if(form_b[key] === \\\"\\\" || form_b[key] == null) { \\r\\n                    error.message = error[key].message \\r\\n                     errorState = true;\\r\\n                    //  scrollToTopPage()\\r\\n                 }\\r\\n            }\\r\\n        }\\r\\n        \\r\\n    if(!errorState){error.message = ''}\\r\\n       if(!error.message){\\r\\n           let allowDate = checkDate(form_a.selectedDeadlineDate, form_a.dDayDate);\\r\\n           if(!allowDate){scrollToTopPage(); error.message = 'Deadline cannot be later than programme date'}\\r\\n         }\\r\\n        if(!error.message){stage += 1}\\r\\n   }\\r\\n   \\r\\n   function handleBack () {\\r\\n        stage -= 1\\r\\n   }\\r\\n\\r\\n    async function submitOpportunity() {\\r\\n        error.message = ''\\r\\n        let errorState;\\r\\n        if(stage===3){\\r\\n            for(var key in form_c) {\\r\\n                if(form_c[key] === \\\"\\\" ||form_c[key] == null) { \\r\\n                    error.message = error[key].message\\r\\n                    errorState = true;\\r\\n                  \\r\\n                 }\\r\\n            }\\r\\n        }\\r\\n    \\r\\n    if(!errorState){error.message = ''}\\r\\n\\r\\n    if(!errorState){\\r\\n        let oppObject = {}\\r\\n        inProgress = true\\r\\n        let resp = await uploadImage(form_a.Filesrc);\\r\\n        \\r\\n      // Save that url in the database\\r\\n\\r\\n        const toast = new Toast()\\r\\n        let opts = {position: 'top-center', duration: 3000}\\r\\n        oppObject = Object.assign(form_a, form_b, form_c)\\r\\n        oppObject.cloudinaryImgURL = resp.secure_url;\\r\\n        const res =  await post(\\\"opportunity\\\", oppObject, null)\\r\\n        if(res.success) {\\r\\n            inProgress = false\\r\\n            toast.success('Successfully created opportunity',opts)\\r\\n            setTimeout(function(){location.href='opportunities/new'} , 4000); \\r\\n        }else {\\r\\n            inProgress = false\\r\\n            toast.error('Error creating opportunity',opts)\\r\\n         }\\r\\n        }\\r\\n\\r\\n   }\\r\\n\\r\\n   const toBase64 = file => new Promise((resolve, reject) => {\\r\\n    const reader = new FileReader();\\r\\n    reader.readAsDataURL(file);\\r\\n    reader.onload = () => resolve(reader.result);\\r\\n    reader.onerror = error => reject(error);\\r\\n});\\r\\n\\r\\n   /*file uploading*/\\r\\n\\r\\nasync function loadFile(e) {\\r\\n      if(e.target.files[0].size > 4002400) {\\r\\n        error.message =   error.Filesrc.img_too_big_message \\r\\n        return;\\r\\n    }else {\\r\\n        error.message = ''\\r\\n        form_a.Filesrc = await toBase64(e.target.files[0]);\\r\\n     }\\r\\n    }\\r\\n\\r\\n\\r\\n  async function uploadImage(file){\\r\\n    const image = file;\\r\\n\\r\\n\\r\\n    const url = `https://api.cloudinary.com/v1_1/${cloudinary.cloudName}/image/upload`;\\r\\n    const timeStamp = Date.now() / 1000;\\r\\n    const STR = `eager=w_400,h_300,c_pad|w_260,h_200,c_crop&timestamp=${timeStamp}${cloudinary.api_secret}`;\\r\\n    const signature = sha1(STR);\\r\\n\\r\\n\\r\\n    const params = {\\r\\n      'api_key': cloudinary.api_key,\\r\\n      'timestamp': timeStamp,\\r\\n    //   'upload_preset': cloudinary.upload_preset,\\r\\n      'signature': signature,\\r\\n      'file': image,\\r\\n      'eager': 'w_400,h_300,c_pad|w_260,h_200,c_crop'\\r\\n    }\\r\\n  \\r\\n     const OppTypeRes = await post(null, params, null, url)\\r\\n    // Make request to cloudinary !!!\\r\\n    // const req = superagent.post(url)\\r\\n\\r\\n    return OppTypeRes;\\r\\n  }\\r\\n\\r\\n  \\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\r\\n .loader_2:after {\\r\\n width: 66.66% !important;\\r\\n }\\r\\n\\r\\n .loader_3:after {\\r\\n      width: 100% !important;\\r\\n }\\r\\n .back-btn{\\r\\n    border-color: #DB9A02 !important;\\r\\n    color: #DB9A02 !important;\\r\\n    background-color: #fff0cb !important;\\r\\n }\\r\\n\\r\\n.txt-ph{\\r\\n    color: #32313c;\\r\\n}\\r\\n.txt-green {\\r\\n    color: green !important;\\r\\n    font-weight: 800;\\r\\n}\\r\\n\\r\\n.nav-items li a {\\r\\n    color: #fff;\\r\\n    font-size: 15px;\\r\\n    padding: 10px 5px;\\r\\n    margin-top: 30px;\\r\\n    font-family: \\\"Open Sans\\\", sans-serif;\\r\\n    text-transform: capitalize;\\r\\n    line-height: 15px;\\r\\n    position: relative;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n</style>\\r\\n\\r\\n<main >\\r\\n<div class=\\\"wrapper new-opportunity\\\">\\r\\n    <!--::header part start::-->\\r\\n    <header class=\\\"main_menu home_menu\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col-lg-12\\\">\\r\\n            <nav\\r\\n                class=\\\"navbar navbar-expand-lg navbar-light\\\"\\r\\n                style=\\\"display: flex;\\\">\\r\\n                <div class=\\\"menu_flex_a\\\">\\r\\n                <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\r\\n                    <img src=\\\"img/ampz/ampz_logo.png\\\" alt=\\\"logo\\\" />\\r\\n                </a>\\r\\n                </div>\\r\\n                <button\\r\\n                class=\\\"navbar-toggler\\\"\\r\\n                type=\\\"button\\\"\\r\\n                data-toggle=\\\"collapse\\\"\\r\\n                data-target=\\\"#navbarSupportedContent\\\"\\r\\n                aria-controls=\\\"navbarSupportedContent\\\"\\r\\n                aria-expanded=\\\"false\\\"\\r\\n                aria-label=\\\"Toggle navigation\\\">\\r\\n                <span class=\\\"ti-menu\\\" />\\r\\n                </button>\\r\\n                <div\\r\\n                class=\\\"collapse navbar-collapse main-menu-item\\r\\n                justify-content-center menu_flex_b\\\"\\r\\n                id=\\\"navbarSupportedContent\\\">\\r\\n                <ul class=\\\"navbar-nav align-items-center\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"/about-ampz\\\">About Us</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"/product\\\">Products</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"/opportunities\\\">Opportunites</a>\\r\\n                    </li>              \\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"/\\\">Blogs</a>\\r\\n                    </li>\\r\\n\\r\\n                    <a class=\\\"btn gold-nav-btn1 gold-nav-link \\\" href=\\\"/waitlist\\\">\\r\\n                    Get Started\\r\\n                    </a>\\r\\n\\r\\n                </ul>\\r\\n\\r\\n                </div>\\r\\n            </nav>\\r\\n            </div>\\r\\n        </div>    \\r\\n    </header>\\r\\n    <!-- Header part end-->\\r\\n    <div class=\\\"content\\\">\\r\\n        <div class=\\\"form\\\">\\r\\n            <span class=\\\"close\\\">&times;</span>\\r\\n            <h3 class=\\\"title\\\">Create an opportunity.</h3>\\r\\n            <div class=\\\"loader {loader_progress}\\\"></div>\\r\\n\\r\\n            {#if error.message}\\r\\n             <div transition:fade class=\\\"errMsg\\\"> {error.message}</div> \\r\\n            {/if}\\r\\n       \\r\\n\\r\\n       {#if stage === 1}\\r\\n            <div class=\\\"upload input\\\">\\r\\n                <input on:change={loadFile} type=\\\"file\\\" accept=\\\"image/*\\\">\\r\\n                <div class=\\\"description\\\">\\r\\n                <img src=\\\"img/upload.png\\\" alt=\\\"\\\">\\r\\n          \\r\\n                {#if form_a.Filesrc }\\r\\n                       <h5 transition:fade class=\\\"txt-green\\\">File Uploaded ! </h5>\\r\\n                {:else}\\r\\n                    <h5> Upload File </h5>\\r\\n                 {/if}\\r\\n                <p>Drag and drop to upload pictures in JPG or PNG</p>\\r\\n              \\r\\n                </div>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" bind:value={form_a.title} placeholder=\\\"Title\\\" class=\\\"input\\\">\\r\\n\\r\\n            <div class=\\\"gold-theme\\\">\\r\\n              <input type=\\\"text\\\"  placeholder=\\\"State\\\" class=\\\"input\\\">\\r\\n            </div>\\r\\n\\r\\n          {#if form_a.location}\\r\\n              <input type=\\\"text\\\" bind:value={form_a.venue_address} placeholder=\\\"Venue Address\\\" class=\\\"input\\\">\\r\\n          {/if}\\r\\n            \\r\\n            <textarea class=\\\"input textarea\\\" bind:value={form_a.description} placeholder=\\\"Description\\\"></textarea>\\r\\n    \\r\\n\\r\\n        <div class=\\\"input\\\">\\r\\n        <span  class=\\\"txt-ph\\\"> Programme date </span>\\r\\n             <Datepicker\\r\\n                bind:formattedSelected={form_a.dDayDate} \\r\\n                bind:dateChosen={dDayDateChosen}\\r\\n                start={tomorrow}\\r\\n                end={in100Days}\\r\\n            >\\r\\n\\r\\n         <input  class=\\\"txt-ph gold-theme\\\" type=\\\"text\\\" value={dDayInputText}  placeholder=\\\"Pick a Date\\\" required/>\\r\\n            \\r\\n            </Datepicker>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"input\\\">\\r\\n            <span class=\\\"txt-ph\\\"> Application Deadline... </span>\\r\\n             <Datepicker \\r\\n                bind:formattedSelected={form_a.selectedDeadlineDate} \\r\\n                bind:dateChosen={deadlineDateChosen}\\r\\n                start={tomorrow}\\r\\n                end={in100Days}\\r\\n            >\\r\\n\\r\\n          <input  class=\\\"txt-ph\\\" id=\\\"opp_deadline\\\" type=\\\"text\\\" value={deadlineInputText}  placeholder=\\\"Pick a Date\\\"  required/>\\r\\n                    \\r\\n            </Datepicker>\\r\\n            </div>\\r\\n            \\r\\n            <button on:click={handleContinue} class=\\\"btn right\\\">\\r\\n            Continue</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n        {/if}\\r\\n\\r\\n           {#if stage === 2}\\r\\n         \\r\\n            <div class=\\\"gold-theme mg-10\\\">\\r\\n                <Select items={opportunities}  bind:selectedValue={form_b.selected_opportunity_type} placeholder=\\\"What kind of Opportunity ?\\\" > </Select>\\r\\n            </div>\\r\\n\\r\\n           <div class=\\\"gold-theme mg-10\\\">\\r\\n                <Select items={sports}  bind:selectedValue={form_b.selected_sport_type} placeholder=\\\"Sport category\\\" > </Select>\\r\\n            </div>\\r\\n        \\r\\n            <input type=\\\"number\\\" bind:value={form_b.price }  placeholder=\\\"Price (NGN)\\\" class=\\\"input\\\">\\r\\n            <input type=\\\"number\\\" bind:value={form_b.age }  placeholder=\\\"Age\\\" class=\\\"input\\\" min=\\\"1\\\" max=\\\"100\\\">\\r\\n            <input type=\\\"text\\\"  bind:value={form_b.application_link } placeholder=\\\"Application Link\\\" class=\\\"input\\\">\\r\\n            <button on:click={handleBack} class=\\\"back-btn btn left\\\">Back</button>\\r\\n            <button disabled={form_b.selected} on:click={handleContinue} class=\\\"btn right\\\">Continue</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n        {/if}\\r\\n\\r\\n\\r\\n        {#if stage === 3}\\r\\n            <div class=\\\"gold-theme\\\">\\r\\n                <Select items={profiles}  bind:selectedValue={form_c.selected_profile_type}  placeholder=\\\"What do you do?\\\"  > </Select>\\r\\n            </div>\\r\\n         \\r\\n            <input type=\\\"text\\\" bind:value={form_c.registered_name_of_organiser }  placeholder=\\\"Registered name of organiser\\\" class=\\\"input\\\">\\r\\n            <input type=\\\"text\\\" bind:value={form_c.registration_type_and_number }  placeholder=\\\"Registration type and Number\\\" class=\\\"input\\\" min=\\\"1\\\" max=\\\"100\\\">\\r\\n            <input type=\\\"text\\\"  bind:value={form_c.contact_email } placeholder=\\\"Contact Email\\\" class=\\\"input\\\">\\r\\n            <input type=\\\"number\\\"  bind:value={form_c.phone_number } placeholder=\\\"Phone Number\\\" class=\\\"input\\\">\\r\\n\\r\\n            <button on:click={handleBack} class=\\\"back-btn btn left\\\">Back</button>\\r\\n           \\r\\n            {#if inProgress}\\r\\n            <span class=\\\"right\\\"> <img style='height:70px' src=\\\"loading-giph.gif\\\" alt=\\\"loading-giph\\\"> </span>\\r\\n            {/if}\\r\\n            <button on:click={submitOpportunity} class=\\\"btn right\\\">\\r\\n            Finish</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n        {/if}\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n \\r\\n</div>\\r\\n</main>\"],\"names\":[],\"mappings\":\"AA2UC,uBAAS,MAAM,AAAC,CAAC,AACjB,KAAK,CAAE,MAAM,CAAC,UAAU,AACxB,CAAC,AAED,uBAAS,MAAM,AAAC,CAAC,AACZ,KAAK,CAAE,IAAI,CAAC,UAAU,AAC3B,CAAC,AACD,uBAAS,CAAC,AACP,YAAY,CAAE,OAAO,CAAC,UAAU,CAChC,KAAK,CAAE,OAAO,CAAC,UAAU,CACzB,gBAAgB,CAAE,OAAO,CAAC,UAAU,AACvC,CAAC,AAEF,qBAAO,CAAC,AACJ,KAAK,CAAE,OAAO,AAClB,CAAC,AACD,UAAU,cAAC,CAAC,AACR,KAAK,CAAE,KAAK,CAAC,UAAU,CACvB,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,UAAU,CAAC,gBAAE,CAAC,CAAC,cAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,GAAG,CACjB,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,WAAW,CAAC,CAAC,UAAU,CACpC,cAAc,CAAE,UAAU,CAC1B,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,AACd,CAAC\"}"
};

const New = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let inProgress;

	let error = {
		selectedDeadlineDate: { message: "Enter the deadline date" },
		dDayDate: { message: "Enter the programme date" },
		description: { message: "Enter the description" },
		title: { message: "Enter the title" },
		location: { message: "Enter the location" },
		venue_address: { message: "Enter the venue address" },
		selected_opportunity_type: { message: "Select an opportunity type" },
		price: { message: "Enter the price" },
		age: { message: "Enter the age requirement" },
		application_link: { message: "Enter your application link" },
		selected_sport_type: { message: "Enter your sports interest" },
		selected_profile_type: { message: "Select the profile type" },
		registered_name_of_organiser: { message: "Enter name of the organiser" },
		registration_type_and_number: { message: "Enter the registration number" },
		contact_email: { message: "Enter your contact email" },
		phone_number: { message: "Enter your phone Number" },
		message: "",
		Filesrc: {
			message: "Upload an image",
			img_too_big_message: "Image too big (max 3000kb)"
		}
	};

	let opportunities;
	let sports;

	let form_a = {
		selectedDeadlineDate: "",
		dDayDate: "",
		description: "",
		title: "",
		location: null,
		venue_address: "",
		Filesrc: ""
	};

	let form_b = {
		selected_opportunity_type: null,
		selected_sport_type: null,
		price: "",
		age: "",
		application_link: ""
	};

	let form_c = {
		selected_profile_type: null,
		registered_name_of_organiser: "",
		registration_type_and_number: "",
		contact_email: "",
		phone_number: ""
	};

	const profiles = [
		{
			value: "5b6712255078132ea9f49b84",
			label: "Scout/Agent"
		},
		{
			value: "5b67121b5078132ea9f49b83",
			label: "Coach/Academy "
		}
	];

	let stage = 1;
	let loader_progress = "33.333%";
	let deadlineDateChosen = false;
	let dDayDateChosen = false;
	let today = new Date();
	let start = new Date();
	let tomorrow;
	let in100Days;

	index.onMount(async () => {
		inProgress = true;
		const OppTypeRes = await _apiv1.get("opportunityType", null, null);
		const SportsRes = await _apiv1.post("defaultskills", null, null);
		const NigerianStatesRes = await _apiv1.get("utils/nigerian_states", null, null);

		if (OppTypeRes.opportunityTypes) {
			opportunities = OppTypeRes.opportunityTypes;

			opportunities.map(opportunitiesObj => {
				opportunitiesObj.label = opportunitiesObj.name;
			});
		}

		if (SportsRes) {
			sports = SportsRes;

			sports.map(sportsObj => {
				sportsObj.label = sportsObj.name;
			});
		}

		inProgress = false;
	});

	index.afterUpdate(() => {
		scrollToTopPage();
	});

	function scrollToTopPage() {
		if (error.message) {
			window.scrollTo({ top: 0, behavior: "smooth" });

			setTimeout(
				function () {
					error.message = "";
				},
				1500
			);
		}

		
	}

	$$result.css.add(css$5);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		let deadlineInputText = deadlineDateChosen ? form_a.selectedDeadlineDate : "";
		let dDayInputText = dDayDateChosen ? form_a.dDayDate : "";

		 {
			{
				const date = new Date(today);
				date.setDate(date.getDate() + 1);
				tomorrow = date;
			}
		}

		 {
			{
				const date = new Date(start);
				date.setDate(date.getDate() + 100);
				in100Days = date;
			}
		}

		 {
			{
				loader_progress = stage == 1
				? ""
				: stage == 2 ? "loader_2" : stage == 3 ? "loader_3" : null;
			}
		}

		$$rendered = `${($$result.head += `<meta charset="${"utf-8"}"><meta name="${"viewport"}" content="${"width=device-width, initial-scale=1, shrink-to-fit=no"}"><title>AMPZ - Discover A World Of Opportunities</title><link rel="${"icon"}" href="${"img/favicon.png"}"><link rel="${"stylesheet"}" href="${"ampz/css/bootstrap.min.css"}"><link rel="${"stylesheet"}" href="${"ampz/css/owl.carousel.min.css"}"><link rel="${"stylesheet"}" href="${"ampz/css/style.css"}"><script src="${"https://code.jquery.com/jquery-3.2.1.slim.min.js"}" integrity="${"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"}" crossorigin="${"anonymous"}"></script><script src="${"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"}" integrity="${"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"}" crossorigin="${"anonymous"}"></script><script src="${"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"}" integrity="${"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"}" crossorigin="${"anonymous"}"></script>`, "")}




<main>
<div class="${"wrapper new-opportunity"}">
    
    <header class="${"main_menu home_menu"}">
        <div class="${"row align-items-center"}">
            <div class="${"col-lg-12"}">
            <nav class="${"navbar navbar-expand-lg navbar-light"}" style="${"display: flex;"}">
                <div class="${"menu_flex_a"}">
                <a class="${"navbar-brand"}" href="${"/"}">
                    <img src="${"img/ampz/ampz_logo.png"}" alt="${"logo"}">
                </a>
                </div>
                <button class="${"navbar-toggler"}" type="${"button"}" data-toggle="${"collapse"}" data-target="${"#navbarSupportedContent"}" aria-controls="${"navbarSupportedContent"}" aria-expanded="${"false"}" aria-label="${"Toggle navigation"}">
                <span class="${"ti-menu"}"></span>
                </button>
                <div class="${"collapse navbar-collapse main-menu-item\r\n                justify-content-center menu_flex_b"}" id="${"navbarSupportedContent"}">
                <ul class="${"navbar-nav align-items-center"}">
                    <li class="${"nav-item svelte-tymta4"}">
                    <a class="${"nav-link svelte-tymta4"}" href="${"/about-ampz"}">About Us</a>
                    </li>
                    <li class="${"nav-item svelte-tymta4"}">
                    <a class="${"nav-link svelte-tymta4"}" href="${"/product"}">Products</a>
                    </li>
                    <li class="${"nav-item svelte-tymta4"}">
                    <a class="${"nav-link svelte-tymta4"}" href="${"/opportunities"}">Opportunites</a>
                    </li>              
                    <li class="${"nav-item svelte-tymta4"}">
                    <a class="${"nav-link svelte-tymta4"}" href="${"/"}">Blogs</a>
                    </li>

                    <a class="${"btn gold-nav-btn1 gold-nav-link "}" href="${"/waitlist"}">
                    Get Started
                    </a>

                </ul>

                </div>
            </nav>
            </div>
        </div>    
    </header>
    
    <div class="${"content"}">
        <div class="${"form"}">
            <span class="${"close"}">×</span>
            <h3 class="${"title"}">Create an opportunity.</h3>
            <div class="${"loader " + index.escape(loader_progress) + " svelte-tymta4"}"></div>

            ${error.message
		? `<div class="${"errMsg"}"> ${index.escape(error.message)}</div>`
		: ``}
       

       ${stage === 1
		? `<div class="${"upload input"}">
                <input type="${"file"}" accept="${"image/*"}">
                <div class="${"description"}">
                <img src="${"img/upload.png"}" alt="${""}">
          
                ${form_a.Filesrc
			? `<h5 class="${"txt-green svelte-tymta4"}">File Uploaded ! </h5>`
			: `<h5> Upload File </h5>`}
                <p>Drag and drop to upload pictures in JPG or PNG</p>
              
                </div>
            </div>
            <input type="${"text"}" placeholder="${"Title"}" class="${"input"}"${index.add_attribute("value", form_a.title, 1)}>

            <div class="${"gold-theme"}">
              <input type="${"text"}" placeholder="${"State"}" class="${"input"}">
            </div>

          ${form_a.location
			? `<input type="${"text"}" placeholder="${"Venue Address"}" class="${"input"}"${index.add_attribute("value", form_a.venue_address, 1)}>`
			: ``}
            
            <textarea class="${"input textarea"}" placeholder="${"Description"}">${form_a.description || ""}</textarea>
    

        <div class="${"input"}">
        <span class="${"txt-ph svelte-tymta4"}"> Programme date </span>
             ${index.validate_component(Datepicker, "Datepicker").$$render(
				$$result,
				{
					start: tomorrow,
					end: in100Days,
					formattedSelected: form_a.dDayDate,
					dateChosen: dDayDateChosen
				},
				{
					formattedSelected: $$value => {
						form_a.dDayDate = $$value;
						$$settled = false;
					},
					dateChosen: $$value => {
						dDayDateChosen = $$value;
						$$settled = false;
					}
				},
				{
					default: () => `

         <input class="${"txt-ph gold-theme svelte-tymta4"}" type="${"text"}"${index.add_attribute("value", dDayInputText, 0)} placeholder="${"Pick a Date"}" required>
            
            `
				}
			)}
            </div>

            <div class="${"input"}">
            <span class="${"txt-ph svelte-tymta4"}"> Application Deadline... </span>
             ${index.validate_component(Datepicker, "Datepicker").$$render(
				$$result,
				{
					start: tomorrow,
					end: in100Days,
					formattedSelected: form_a.selectedDeadlineDate,
					dateChosen: deadlineDateChosen
				},
				{
					formattedSelected: $$value => {
						form_a.selectedDeadlineDate = $$value;
						$$settled = false;
					},
					dateChosen: $$value => {
						deadlineDateChosen = $$value;
						$$settled = false;
					}
				},
				{
					default: () => `

          <input class="${"txt-ph svelte-tymta4"}" id="${"opp_deadline"}" type="${"text"}"${index.add_attribute("value", deadlineInputText, 0)} placeholder="${"Pick a Date"}" required>
                    
            `
				}
			)}
            </div>
            
            <button class="${"btn right"}">
            Continue</button>
            <div class="${"clearfix"}"></div>`
		: ``}

           ${stage === 2
		? `<div class="${"gold-theme mg-10"}">
                ${index.validate_component(Select.Select, "Select").$$render(
				$$result,
				{
					items: opportunities,
					placeholder: "What kind of Opportunity ?",
					selectedValue: form_b.selected_opportunity_type
				},
				{
					selectedValue: $$value => {
						form_b.selected_opportunity_type = $$value;
						$$settled = false;
					}
				},
				{ default: () => ` ` }
			)}
            </div>

           <div class="${"gold-theme mg-10"}">
                ${index.validate_component(Select.Select, "Select").$$render(
				$$result,
				{
					items: sports,
					placeholder: "Sport category",
					selectedValue: form_b.selected_sport_type
				},
				{
					selectedValue: $$value => {
						form_b.selected_sport_type = $$value;
						$$settled = false;
					}
				},
				{ default: () => ` ` }
			)}
            </div>
        
            <input type="${"number"}" placeholder="${"Price (NGN)"}" class="${"input"}"${index.add_attribute("value", form_b.price, 1)}>
            <input type="${"number"}" placeholder="${"Age"}" class="${"input"}" min="${"1"}" max="${"100"}"${index.add_attribute("value", form_b.age, 1)}>
            <input type="${"text"}" placeholder="${"Application Link"}" class="${"input"}"${index.add_attribute("value", form_b.application_link, 1)}>
            <button class="${"back-btn btn left svelte-tymta4"}">Back</button>
            <button ${form_b.selected ? "disabled" : ""} class="${"btn right"}">Continue</button>
            <div class="${"clearfix"}"></div>`
		: ``}


        ${stage === 3
		? `<div class="${"gold-theme"}">
                ${index.validate_component(Select.Select, "Select").$$render(
				$$result,
				{
					items: profiles,
					placeholder: "What do you do?",
					selectedValue: form_c.selected_profile_type
				},
				{
					selectedValue: $$value => {
						form_c.selected_profile_type = $$value;
						$$settled = false;
					}
				},
				{ default: () => ` ` }
			)}
            </div>
         
            <input type="${"text"}" placeholder="${"Registered name of organiser"}" class="${"input"}"${index.add_attribute("value", form_c.registered_name_of_organiser, 1)}>
            <input type="${"text"}" placeholder="${"Registration type and Number"}" class="${"input"}" min="${"1"}" max="${"100"}"${index.add_attribute("value", form_c.registration_type_and_number, 1)}>
            <input type="${"text"}" placeholder="${"Contact Email"}" class="${"input"}"${index.add_attribute("value", form_c.contact_email, 1)}>
            <input type="${"number"}" placeholder="${"Phone Number"}" class="${"input"}"${index.add_attribute("value", form_c.phone_number, 1)}>

            <button class="${"back-btn btn left svelte-tymta4"}">Back</button>
           
            ${inProgress
			? `<span class="${"right"}"> <img style="${"height:70px"}" src="${"loading-giph.gif"}" alt="${"loading-giph"}"> </span>`
			: ``}
            <button class="${"btn right"}">
            Finish</button>
            <div class="${"clearfix"}"></div>`
		: ``}

        </div>
    </div>
 
</div>
</main>`;
	} while (!$$settled);

	return $$rendered;
});

exports.default = New;
